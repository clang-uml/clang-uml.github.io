<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="892px" preserveAspectRatio="none" style="width:1261px;height:892px;" version="1.1" viewBox="0 0 1261 892" width="1261px" zoomAndPan="magnify"><defs><filter height="300%" id="f8a3ykt65io3r" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="classclanguml_1_1common_1_1model_1_1diagram.html" target="_top" title="Base class for all diagram models" xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1diagram.html" xlink:show="new" xlink:title="Base class for all diagram models" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f8a3ykt65io3r)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="932" x="6" y="8"/><ellipse cx="388.75" cy="24" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M388.8594,19.3438 L387.7031,24.4219 L390.0313,24.4219 L388.8594,19.3438 Z M387.375,17.1094 L390.3594,17.1094 L393.7188,29.5 L391.2656,29.5 L390.5,26.4375 L387.2188,26.4375 L386.4688,29.5 L384.0313,29.5 L387.375,17.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="409.25" y="28.1543">common::model::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="937" y1="40" y2="40"/></a><a href="" target="_top" title="Whether the diagram is complete." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Whether the diagram is complete." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="46"/><ellipse cx="17" cy="51" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Whether the diagram is complete." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Whether the diagram is complete." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26" y="54.2104">complete() const : bool</text></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="58.8047"/><ellipse cx="17" cy="63.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="67.0151">context() const = 0 : inja::json</text></a><a href="" target="_top" title="filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="71.6094"/><ellipse cx="17" cy="76.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="26" y="79.8198">filter() const : const common::model::diagram_filter &amp;</text></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="84.4141"/><ellipse cx="17" cy="89.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="26" y="92.6245">finalize() : void</text></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="97.2188"/><ellipse cx="17" cy="102.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="600" x="26" y="105.4292">get(const std::string &amp; full_name) const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="110.0234"/><ellipse cx="17" cy="115.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="578" x="26" y="118.2339">get(diagram_element::id_t id) const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="get_with_namespace" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_with_namespace" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="122.8281"/><ellipse cx="17" cy="127.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get_with_namespace" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_with_namespace" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="906" x="26" y="131.0386">get_with_namespace(const std::string &amp; name, const common::model::namespace_ &amp; ns) const : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="has_element" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="has_element" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="135.6328"/><ellipse cx="17" cy="140.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="has_element" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="has_element" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="314" x="26" y="143.8433">has_element(const diagram_element::id_t) const : bool</text></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="148.4375"/><ellipse cx="17" cy="153.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="26" y="156.6479">name() const : std::string</text></a><a href="" target="_top" title="Set diagram in a complete state." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set diagram in a complete state." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="161.2422"/><ellipse cx="17" cy="166.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set diagram in a complete state." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set diagram in a complete state." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="26" y="169.4526">set_complete(bool complete) : void</text></a><a href="" target="_top" title="set_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="174.0469"/><ellipse cx="17" cy="179.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="26" y="182.2573">set_filter(std::unique_ptr&lt;diagram_filter&gt; filter) : void</text></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="186.8516"/><ellipse cx="17" cy="191.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="26" y="195.062">set_name(const std::string &amp; name) : void</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="199.6563"/><ellipse cx="17" cy="204.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="26" y="207.8667">should_include(const common::model::element &amp; e) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="212.4609"/><ellipse cx="17" cy="217.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="26" y="220.6714">should_include(const common::model::namespace_ &amp; ns) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="225.2656"/><ellipse cx="17" cy="230.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="26" y="233.4761">should_include(const common::model::source_file &amp; path) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="238.0703"/><ellipse cx="17" cy="243.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="26" y="246.2808">should_include(common::model::relationship r) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="250.875"/><ellipse cx="17" cy="255.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="26" y="259.0854">should_include(common::model::relationship_t r) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="263.6797"/><ellipse cx="17" cy="268.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="26" y="271.8901">should_include(common::model::access_t s) const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="276.4844"/><ellipse cx="17" cy="281.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="26" y="284.6948">should_include(const std::string &amp; s) const = deleted : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="289.2891"/><ellipse cx="17" cy="294.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="26" y="297.4995">should_include(const common::model::namespace_ &amp; ns, const std::string &amp; name) const : bool</text></a><a href="" target="_top" title="Return type of the diagram." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return type of the diagram." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="302.0938"/><ellipse cx="17" cy="307.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Return type of the diagram." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return type of the diagram." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="26" y="310.3042">type() const = 0 : common::model::diagram_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="937" y1="316.8984" y2="316.8984"/><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="322.8984"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="324.8984"/></a><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="26" y="331.1089">complete_ : bool</text></a><a href="" target="_top" title="filter_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="335.7031"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="337.7031"/></a><a href="" target="_top" title="filter_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26" y="343.9136">filter_ : std::unique_ptr&lt;diagram_filter&gt;</text></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="12" y="348.5078"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="350.5078"/></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="26" y="356.7183">name_ : std::string</text></a><!--MD5=[348c2d3db5652c25145b0d8e485c461e]
class C_0000469458052685692314--><a href="classclanguml_1_1common_1_1model_1_1filter__visitor.html" target="_top" title="Base class for any diagram filter." xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1filter__visitor.html" xlink:show="new" xlink:title="Base class for any diagram filter." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f8a3ykt65io3r)" height="214.4609" id="C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.5;" width="674" x="34" y="667"/><ellipse cx="277.75" cy="683" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M280.7188,688.6406 Q280.1406,688.9375 279.5,689.0781 Q278.8594,689.2344 278.1563,689.2344 Q275.6563,689.2344 274.3281,687.5938 Q273.0156,685.9375 273.0156,682.8125 Q273.0156,679.6875 274.3281,678.0313 Q275.6563,676.375 278.1563,676.375 Q278.8594,676.375 279.5,676.5313 Q280.1563,676.6875 280.7188,676.9844 L280.7188,679.7031 Q280.0938,679.125 279.5,678.8594 Q278.9063,678.5781 278.2813,678.5781 Q276.9375,678.5781 276.25,679.6563 Q275.5625,680.7188 275.5625,682.8125 Q275.5625,684.9063 276.25,685.9844 Q276.9375,687.0469 278.2813,687.0469 Q278.9063,687.0469 279.5,686.7813 Q280.0938,686.5 280.7188,685.9219 L280.7188,688.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="178" x="298.25" y="687.1543">common::model::filter_visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="707" y1="699" y2="699"/></a><a href="" target="_top" title="is_exclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_exclusive" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="705"/><ellipse cx="45" cy="710" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="is_exclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_exclusive" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="54" y="713.2104">is_exclusive() const : bool</text></a><a href="" target="_top" title="is_inclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_inclusive" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="717.8047"/><ellipse cx="45" cy="722.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="is_inclusive" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_inclusive" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="54" y="726.0151">is_inclusive() const : bool</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="730.6094"/><ellipse cx="45" cy="735.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="572" x="54" y="738.8198">match(const common::model::diagram &amp; d, const common::model::element &amp; e) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="743.4141"/><ellipse cx="45" cy="748.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="601" x="54" y="751.6245">match(const common::model::diagram &amp; d, const common::model::relationship_t &amp; r) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="756.2188"/><ellipse cx="45" cy="761.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="576" x="54" y="764.4292">match(const common::model::diagram &amp; d, const common::model::access_t &amp; a) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="769.0234"/><ellipse cx="45" cy="774.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="605" x="54" y="777.2339">match(const common::model::diagram &amp; d, const common::model::namespace_ &amp; ns) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="781.8281"/><ellipse cx="45" cy="786.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="54" y="790.0386">match(const common::model::diagram &amp; d, const common::model::source_file &amp; f) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="794.6328"/><ellipse cx="45" cy="799.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="612" x="54" y="802.8433">match(const common::model::diagram &amp; d, const common::model::source_location &amp; f) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="807.4375"/><ellipse cx="45" cy="812.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="643" x="54" y="815.6479">match(const common::model::diagram &amp; d, const class_diagram::model::class_method &amp; m) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="820.2422"/><ellipse cx="45" cy="825.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="648" x="54" y="828.4526">match(const common::model::diagram &amp; d, const class_diagram::model::class_member &amp; m) const : tvl::value_t</text></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="833.0469"/><ellipse cx="45" cy="838.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="match" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="match" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="645" x="54" y="841.2573">match(const common::model::diagram &amp; d, const sequence_diagram::model::participant &amp; p) const : tvl::value_t</text></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="845.8516"/><ellipse cx="45" cy="850.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="54" y="854.062">type() const : common::model::filter_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="35" x2="707" y1="860.6563" y2="860.6563"/><a href="" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="40" y="866.6563"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="42" y="868.6563"/></a><a href="" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="54" y="874.8667">type_ : common::model::filter_t</text></a><!--MD5=[f7dfcf794614e50ee3dd2ad309c49343]
class C_0002054140694270036745--><a href="classclanguml_1_1common_1_1model_1_1diagram__filter.html" target="_top" title="Composite of all diagrams filters." xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1diagram__filter.html" xlink:show="new" xlink:title="Composite of all diagrams filters." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f8a3ykt65io3r)" height="150.4375" id="C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.5;" width="580" x="254" y="440"/><ellipse cx="443.75" cy="456" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M446.7188,461.6406 Q446.1406,461.9375 445.5,462.0781 Q444.8594,462.2344 444.1563,462.2344 Q441.6563,462.2344 440.3281,460.5938 Q439.0156,458.9375 439.0156,455.8125 Q439.0156,452.6875 440.3281,451.0313 Q441.6563,449.375 444.1563,449.375 Q444.8594,449.375 445.5,449.5313 Q446.1563,449.6875 446.7188,449.9844 L446.7188,452.7031 Q446.0938,452.125 445.5,451.8594 Q444.9063,451.5781 444.2813,451.5781 Q442.9375,451.5781 442.25,452.6563 Q441.5625,453.7188 441.5625,455.8125 Q441.5625,457.9063 442.25,458.9844 Q442.9375,460.0469 444.2813,460.0469 Q444.9063,460.0469 445.5,459.7813 Q446.0938,459.5 446.7188,458.9219 L446.7188,461.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="192" x="464.25" y="460.1543">common::model::diagram_filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="255" x2="833" y1="472" y2="472"/></a><a href="" target="_top" title="add_exclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_exclusive_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="478"/><ellipse cx="265" cy="483" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="add_exclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_exclusive_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="274" y="486.2104">add_exclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text></a><a href="" target="_top" title="add_inclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_inclusive_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="490.8047"/><ellipse cx="265" cy="495.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="add_inclusive_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_inclusive_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="274" y="499.0151">add_inclusive_filter(std::unique_ptr&lt;filter_visitor&gt; fv) : void</text></a><a href="" target="_top" title="Initialize filters." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize filters." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="503.6094"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="262" y="505.6094"/></a><a href="" target="_top" title="Initialize filters." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize filters." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="274" y="511.8198">init_filters(const config::diagram &amp; c) : void</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="516.4141"/><ellipse cx="265" cy="521.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="274" y="524.6245">should_include(const common::model::namespace_ &amp; ns, const std::string &amp; name) const : bool</text></a><ellipse cx="265" cy="534.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="274" y="537.4292">should_include&lt;T&gt;(const T &amp; e) const : _Bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="255" x2="833" y1="544.0234" y2="544.0234"/><a href="" target="_top" title="diagram_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="diagram_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="550.0234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="262" y="552.0234"/></a><a href="" target="_top" title="diagram_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="diagram_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="274" y="558.2339">diagram_ : const common::model::diagram &amp;</text></a><a href="" target="_top" title="exclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="exclusive_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="562.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="262" y="564.8281"/></a><a href="" target="_top" title="exclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="exclusive_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="274" y="571.0386">exclusive_ : std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt;</text></a><a href="" target="_top" title="inclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="inclusive_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="260" y="575.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="262" y="577.6328"/></a><a href="" target="_top" title="inclusive_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="inclusive_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="274" y="583.8433">inclusive_ : std::vector&lt;std::unique_ptr&lt;filter_visitor&gt;&gt;</text></a><!--MD5=[ae7762d6dc8ec1ee432785f9a7101014]
class C_0000400244097365422548--><a href="structclanguml_1_1config_1_1diagram.html" target="_top" title="Common diagram configuration type" xlink:actuate="onRequest" xlink:href="structclanguml_1_1config_1_1diagram.html" xlink:show="new" xlink:title="Common diagram configuration type" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f8a3ykt65io3r)" height="137.6328" id="C_0000400244097365422548" style="stroke: #A80036; stroke-width: 1.5;" width="507" x="743.5" y="705"/><ellipse cx="944.25" cy="721" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M944.3594,716.3438 L943.2031,721.4219 L945.5313,721.4219 L944.3594,716.3438 Z M942.875,714.1094 L945.8594,714.1094 L949.2188,726.5 L946.7656,726.5 L946,723.4375 L942.7188,723.4375 L941.9688,726.5 L939.5313,726.5 L942.875,714.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="964.75" y="725.1543">config::diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="744.5" x2="1249.5" y1="737" y2="737"/></a><a href="" target="_top" title="get_together_group" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_together_group" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="743"/><ellipse cx="754.5" cy="748" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get_together_group" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_together_group" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="481" x="763.5" y="751.2104">get_together_group(const std::string &amp; full_name) const : std::optional&lt;std::string&gt;</text></a><a href="" target="_top" title="Returns list of translation unit paths" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns list of translation unit paths" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="755.8047"/><ellipse cx="754.5" cy="760.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Returns list of translation unit paths" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns list of translation unit paths" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="763.5" y="764.0151">get_translation_units() const : std::vector&lt;std::string&gt;</text></a><a href="" target="_top" title="Initialize predefined set of C++ type aliases" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize predefined set of C++ type aliases" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="768.6094"/><ellipse cx="754.5" cy="773.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Initialize predefined set of C++ type aliases" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Initialize predefined set of C++ type aliases" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="763.5" y="776.8198">initialize_type_aliases() : void</text></a><a href="" target="_top" title="Make path relative to the `relative_to` config option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Make path relative to the `relative_to` config option" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="781.4141"/><ellipse cx="754.5" cy="786.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Make path relative to the `relative_to` config option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Make path relative to the `relative_to` config option" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="763.5" y="789.6245">make_path_relative(const std::filesystem::path &amp; p) const : std::filesystem::path</text></a><a href="" target="_top" title="Returns absolute path of the `relative_to` option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns absolute path of the `relative_to` option" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="794.2188"/><ellipse cx="754.5" cy="799.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Returns absolute path of the `relative_to` option" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns absolute path of the `relative_to` option" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="763.5" y="802.4292">root_directory() const : std::filesystem::path</text></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="807.0234"/><ellipse cx="754.5" cy="812.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="763.5" y="815.2339">type() const = 0 : common::model::diagram_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="744.5" x2="1249.5" y1="821.8281" y2="821.8281"/><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="749.5" y="827.8281"/><ellipse cx="754.5" cy="832.8281" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="763.5" y="836.0386">name : std::string</text></a><!--MD5=[9d2696b0cae957718881a47258d1933f]
link C_0000197068985320835874 to C_0002054140694270036745--><path d="M425.13,363.26 C426.33,379.36 429.69,395.17 436,410 C439.78,418.89 444.74,427.39 450.45,435.43 " fill="none" id="C_0000197068985320835874-&gt;C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="453.7,439.84,451.5989,430.2179,450.7413,435.8093,445.1499,434.9518,453.7,439.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2c0e890a58fad6642f619a104dbc6186]
reverse link C_0000197068985320835874 to C_0002054140694270036745--><path d="M460.86,376.28 C462.83,387.81 465.49,399.13 469,410 C472.28,420.17 476.97,430.18 482.43,439.74 " fill="none" id="C_0000197068985320835874&lt;-C_0002054140694270036745" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="458.93,363.19,455.8501,369.7103,460.6843,375.0611,463.7642,368.5408,458.93,363.19" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="472" y="399.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="482" y="406.0669">filter_</text><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M531.24,439.96 C528.36,424.41 525.21,408.14 522,393 C520.29,384.93 518.5,376.7 516.65,368.39 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="515.5,363.2,513.5806,372.86,516.6013,368.0772,521.3841,371.0979,515.5,363.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[916f1520f6f72ccc5ea972a5fb9ab97b]
link C_0002054140694270036745 to C_0000197068985320835874--><path d="M548,439.88 C548.41,429.84 548.77,419.67 549,410 C549.18,402.45 550.34,400.44 549,393 C547.52,384.81 545.74,376.53 543.72,368.22 " fill="none" id="C_0002054140694270036745-&gt;C_0000197068985320835874-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="542.43,363.05,540.7054,372.7467,543.6292,367.9041,548.4719,370.8279,542.43,363.05" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="552" y="399.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="60" x="562" y="406.0669">diagram_</text><!--MD5=[b20cde3b1639d6cf1a1e38aa171d6b26]
link C_0000469458052685692314 to C_0000197068985320835874--><path d="M275.45,666.64 C259.24,642.93 244.82,616.82 236,590 C215.17,526.67 211.59,502.04 236,440 C246,414.58 259.88,390.21 275.95,367.3 " fill="none" id="C_0000469458052685692314-&gt;C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="278.98,363.04,270.5089,368.0639,276.086,367.1173,277.0326,372.6944,278.98,363.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[eaf865eeab14312af446ab4325231cd2]
link C_0002054140694270036745 to C_0000400244097365422548--><path d="M674.72,590.16 C737,625.49 811.11,667.54 872.55,702.4 " fill="none" id="C_0002054140694270036745-&gt;C_0000400244097365422548" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="876.95,704.89,871.0951,696.9704,872.6009,702.4231,867.1481,703.9289,876.95,704.89" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b4df53ae87d92adb383d037ed9a89fd2]
link C_0002054140694270036745 to C_0000469458052685692314--><path d="M417.24,590.07 C408.01,599.2 399.71,609.18 393,620 C385.12,632.7 379.63,647.12 375.86,661.91 " fill="none" id="C_0002054140694270036745-&gt;C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="374.64,666.93,380.6386,659.1187,375.8123,662.0694,372.8616,657.243,374.64,666.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M441.35,600.09 C435.81,606.52 430.63,613.18 426,620 C416.32,634.24 408.14,650.38 401.28,666.71 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="450.31,590.16,443.3207,591.9348,442.2708,599.069,449.2601,597.2943,450.31,590.16" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="429" y="626.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="439" y="633.0669">inclusive_</text><!--MD5=[091ddbac09a0b8e3b33b87414f321bb6]
reverse link C_0002054140694270036745 to C_0000469458052685692314--><path d="M521.61,602.55 C516.96,614.52 511.45,626.35 505,637 C498.81,647.2 491.72,657.23 484.09,666.92 " fill="none" id="C_0002054140694270036745&lt;-C_0000469458052685692314-1" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="526.17,590.06,520.3556,594.3252,522.0564,601.3329,527.8708,597.0677,526.17,590.06" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="516" y="626.0664"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="526" y="633.0669">exclusive_</text><!--MD5=[edce1ee9a49d1a04bfb4e23bf0e97525]
@startuml
abstract "common::model::diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[classclanguml_1_1common_1_1model_1_1diagram.html{Base class for all diagram models}]] {
+complete() const : bool [[[{Whether the diagram is complete.}]]]
{abstract} +context() const = 0 : inja::json [[[{context}]]]
+filter() const : const common::model::diagram_filter & [[[{filter}]]]
+finalize() : void [[[{Once the diagram is complete, run any final processing.}]]]
{abstract} +get(const std::string & full_name) const = 0 : common::optional_ref<common::model::diagram_element> [[[{get}]]]
{abstract} +get(diagram_element::id_t id) const = 0 : common::optional_ref<common::model::diagram_element> [[[{get}]]]
+get_with_namespace(const std::string & name, const common::model::namespace_ & ns) const : common::optional_ref<common::model::diagram_element> [[[{get_with_namespace}]]]
+has_element(const diagram_element::id_t) const : bool [[[{has_element}]]]
+name() const : std::string [[[{name}]]]
+set_complete(bool complete) : void [[[{Set diagram in a complete state.}]]]
+set_filter(std::unique_ptr<diagram_filter> filter) : void [[[{set_filter}]]]
+set_name(const std::string & name) : void [[[{set_name}]]]
+should_include(const common::model::element & e) const : bool [[[{should_include}]]]
+should_include(const common::model::namespace_ & ns) const : bool [[[{should_include}]]]
+should_include(const common::model::source_file & path) const : bool [[[{should_include}]]]
+should_include(common::model::relationship r) const : bool [[[{should_include}]]]
+should_include(common::model::relationship_t r) const : bool [[[{should_include}]]]
+should_include(common::model::access_t s) const : bool [[[{should_include}]]]
+should_include(const std::string & s) const = deleted : bool [[[{should_include}]]]
+should_include(const common::model::namespace_ & ns, const std::string & name) const : bool [[[{should_include}]]]
{abstract} +type() const = 0 : common::model::diagram_t [[[{Return type of the diagram.}]]]
__
-complete_ : bool [[[{complete_}]]]
-filter_ : std::unique_ptr<diagram_filter> [[[{filter_}]]]
-name_ : std::string [[[{name_}]]]
}
class "common::model::filter_visitor" as C_0000469458052685692314
class C_0000469458052685692314 [[classclanguml_1_1common_1_1model_1_1filter__visitor.html{Base class for any diagram filter.}]] {
+is_exclusive() const : bool [[[{is_exclusive}]]]
+is_inclusive() const : bool [[[{is_inclusive}]]]
+match(const common::model::diagram & d, const common::model::element & e) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const common::model::relationship_t & r) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const common::model::access_t & a) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const common::model::namespace_ & ns) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const common::model::source_file & f) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const common::model::source_location & f) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const class_diagram::model::class_method & m) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const class_diagram::model::class_member & m) const : tvl::value_t [[[{match}]]]
+match(const common::model::diagram & d, const sequence_diagram::model::participant & p) const : tvl::value_t [[[{match}]]]
+type() const : common::model::filter_t [[[{type}]]]
__
-type_ : common::model::filter_t [[[{type_}]]]
}
class "common::model::diagram_filter" as C_0002054140694270036745
class C_0002054140694270036745 [[classclanguml_1_1common_1_1model_1_1diagram__filter.html{Composite of all diagrams filters.}]] {
+add_exclusive_filter(std::unique_ptr<filter_visitor> fv) : void [[[{add_exclusive_filter}]]]
+add_inclusive_filter(std::unique_ptr<filter_visitor> fv) : void [[[{add_inclusive_filter}]]]
-init_filters(const config::diagram & c) : void [[[{Initialize filters.}]]]
+should_include(const common::model::namespace_ & ns, const std::string & name) const : bool [[[{should_include}]]]
+should_include<T>(const T & e) const : _Bool
__
-diagram_ : const common::model::diagram & [[[{diagram_}]]]
-exclusive_ : std::vector<std::unique_ptr<filter_visitor>> [[[{exclusive_}]]]
-inclusive_ : std::vector<std::unique_ptr<filter_visitor>> [[[{inclusive_}]]]
}
abstract "config::diagram" as C_0000400244097365422548
abstract C_0000400244097365422548 [[structclanguml_1_1config_1_1diagram.html{Common diagram configuration type}]] {
+get_together_group(const std::string & full_name) const : std::optional<std::string> [[[{get_together_group}]]]
+get_translation_units() const : std::vector<std::string> [[[{Returns list of translation unit paths}]]]
+initialize_type_aliases() : void [[[{Initialize predefined set of C++ type aliases}]]]
+make_path_relative(const std::filesystem::path & p) const : std::filesystem::path [[[{Make path relative to the `relative_to` config option}]]]
+root_directory() const : std::filesystem::path [[[{Returns absolute path of the `relative_to` option}]]]
{abstract} +type() const = 0 : common::model::diagram_t [[[{type}]]]
__
+name : std::string [[[{name}]]]
}
C_0000197068985320835874 ..> C_0002054140694270036745
C_0000197068985320835874 o- - C_0002054140694270036745 : -filter_
C_0000469458052685692314 ..> C_0000197068985320835874
C_0002054140694270036745 ..> C_0000197068985320835874
C_0002054140694270036745 ..> C_0000400244097365422548
C_0002054140694270036745 ..> C_0000469458052685692314
C_0002054140694270036745 o- - C_0000469458052685692314 : -inclusive_
C_0002054140694270036745 o- - C_0000469458052685692314 : -exclusive_
C_0002054140694270036745 - -> C_0000197068985320835874 : -diagram_

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>