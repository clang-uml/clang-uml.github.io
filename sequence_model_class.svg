<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1698px" preserveAspectRatio="none" style="width:2505px;height:1698px;" version="1.1" viewBox="0 0 2505 1698" width="2505px" zoomAndPan="magnify"><defs><filter height="300%" id="f13layccf7i1ld" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="314" x="1101.5" y="16.708">clang-uml sequence diagram model</text><!--MD5=[7ba9c127878a642fef3f451151dda753]
cluster C_0000316605034920222648--><polygon fill="#FFFFFF" filter="url(#f13layccf7i1ld)" points="1156,1213.9531,1229,1213.9531,1236,1236.25,2483,1236.25,2483,1686.9531,1156,1686.9531,1156,1213.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1156" x2="1236" y1="1236.25" y2="1236.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="67" x="1160" y="1228.9482">common</text><!--MD5=[f7110622f5be760311cd0491b75bf8f9]
cluster C_0000083721806430512831--><polygon fill="#FFFFFF" filter="url(#f13layccf7i1ld)" points="1180,1256.9531,1234,1256.9531,1241,1279.25,2459,1279.25,2459,1662.9531,1180,1662.9531,1180,1256.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1180" x2="1241" y1="1279.25" y2="1279.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="1184" y="1271.9482">model</text><!--MD5=[2319765f5fef5e41f5b55adb85cd73ea]
cluster C_0001521862840957629236--><polygon fill="#FFFFFF" filter="url(#f13layccf7i1ld)" points="22,44.9531,176,44.9531,183,67.25,1132,67.25,1132,1680.9531,22,1680.9531,22,44.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="183" y1="67.25" y2="67.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="59.9482">sequence_diagram</text><!--MD5=[aff6d1ed1f9fc56ba8376cf20ecae299]
cluster C_0002206969880830639264--><polygon fill="#FFFFFF" filter="url(#f13layccf7i1ld)" points="46,87.9531,100,87.9531,107,110.25,1108,110.25,1108,1656.9531,46,1656.9531,46,87.9531" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="46" x2="107" y1="110.25" y2="110.25"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="48" x="50" y="102.9482">model</text><!--MD5=[f8a2cda009cdde2ba763183a56efb330]
class C_0001623832985137466228--><a href="enumclanguml_1_1common_1_1model_1_1message__t.html" target="_top" title="message_t" xlink:actuate="onRequest" xlink:href="enumclanguml_1_1common_1_1model_1_1message__t.html" xlink:show="new" xlink:title="message_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="329.7031" id="C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.5;" width="105" x="1581.5" y="1304.4531"/><ellipse cx="1598.75" cy="1320.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1602.8594,1326.4531 L1595.1406,1326.4531 L1595.1406,1314.0625 L1602.8594,1314.0625 L1602.8594,1316.2188 L1597.5938,1316.2188 L1597.5938,1318.8906 L1602.3594,1318.8906 L1602.3594,1321.0469 L1597.5938,1321.0469 L1597.5938,1324.2969 L1602.8594,1324.2969 L1602.8594,1326.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="1613.25" y="1324.6074">message_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1582.5" x2="1685.5" y1="1336.4531" y2="1336.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="27" x="1587.5" y="1350.6636">kCall</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="1587.5" y="1363.4683">kReturn</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="13" x="1587.5" y="1376.2729">kIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="1587.5" y="1389.0776">kElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="1587.5" y="1401.8823">kElseIf</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="1587.5" y="1414.687">kIfEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1587.5" y="1427.4917">kWhile</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="1587.5" y="1440.2964">kWhileEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="1587.5" y="1453.1011">kDo</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="1587.5" y="1465.9058">kDoEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="1587.5" y="1478.7104">kFor</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="1587.5" y="1491.5151">kForEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="1587.5" y="1504.3198">kTry</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="1587.5" y="1517.1245">kCatch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="1587.5" y="1529.9292">kTryEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="1587.5" y="1542.7339">kSwitch</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1587.5" y="1555.5386">kCase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1587.5" y="1568.3433">kSwitchEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1587.5" y="1581.1479">kConditional</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1587.5" y="1593.9526">kConditionalElse</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1587.5" y="1606.7573">kConditionalEnd</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1587.5" y="1619.562">kNone</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1582.5" x2="1685.5" y1="1626.1563" y2="1626.1563"/></a><!--MD5=[a4045e9fb8293b481b473dbc861ce4a5]
class C_0000202859212831973510--><a href="enumclanguml_1_1common_1_1model_1_1message__scope__t.html" target="_top" title="message_scope_t" xlink:actuate="onRequest" xlink:href="enumclanguml_1_1common_1_1model_1_1message__scope__t.html" xlink:show="new" xlink:title="message_scope_t" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="73.6094" id="C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.5;" width="144" x="1722" y="1432.4531"/><ellipse cx="1737" cy="1448.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1741.1094,1454.4531 L1733.3906,1454.4531 L1733.3906,1442.0625 L1741.1094,1442.0625 L1741.1094,1444.2188 L1735.8438,1444.2188 L1735.8438,1446.8906 L1740.6094,1446.8906 L1740.6094,1449.0469 L1735.8438,1449.0469 L1735.8438,1452.2969 L1741.1094,1452.2969 L1741.1094,1454.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="1751" y="1452.6074">message_scope_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1723" x2="1865" y1="1464.4531" y2="1464.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1728" y="1478.6636">kNormal</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="1728" y="1491.4683">kCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1723" x2="1865" y1="1498.0625" y2="1498.0625"/></a><!--MD5=[c7954e9554acd525dcb4b1b7d8febda3]
class C_0001073500714379115414--><a href="classclanguml_1_1common_1_1model_1_1diagram__element.html" target="_top" title="Base class for standalone diagram elements." xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1diagram__element.html" xlink:show="new" xlink:title="Base class for standalone diagram elements." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="316.8984" id="C_0001073500714379115414" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="1196" y="1310.9531"/><ellipse cx="1312.75" cy="1326.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1315.7188,1332.5938 Q1315.1406,1332.8906 1314.5,1333.0313 Q1313.8594,1333.1875 1313.1563,1333.1875 Q1310.6563,1333.1875 1309.3281,1331.5469 Q1308.0156,1329.8906 1308.0156,1326.7656 Q1308.0156,1323.6406 1309.3281,1321.9844 Q1310.6563,1320.3281 1313.1563,1320.3281 Q1313.8594,1320.3281 1314.5,1320.4844 Q1315.1563,1320.6406 1315.7188,1320.9375 L1315.7188,1323.6563 Q1315.0938,1323.0781 1314.5,1322.8125 Q1313.9063,1322.5313 1313.2813,1322.5313 Q1311.9375,1322.5313 1311.25,1323.6094 Q1310.5625,1324.6719 1310.5625,1326.7656 Q1310.5625,1328.8594 1311.25,1329.9375 Q1311.9375,1331 1313.2813,1331 Q1313.9063,1331 1314.5,1330.7344 Q1315.0938,1330.4531 1315.7188,1329.875 L1315.7188,1332.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="1333.25" y="1331.1074">diagram_element</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1197" x2="1545" y1="1342.9531" y2="1342.9531"/></a><a href="" target="_top" title="add_relationship" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_relationship" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1348.9531"/><ellipse cx="1207" cy="1353.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="add_relationship" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="add_relationship" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1216" y="1357.1636">add_relationship() : void</text></a><a href="" target="_top" title="Return elements' diagram alias." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return elements' diagram alias." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1361.7578"/><ellipse cx="1207" cy="1366.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Return elements' diagram alias." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return elements' diagram alias." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1216" y="1369.9683">alias() const : std::string</text></a><a href="" target="_top" title="append" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="append" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1374.5625"/><ellipse cx="1207" cy="1379.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="append" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="append" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1216" y="1382.7729">append() : void</text></a><a href="" target="_top" title="complete" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1387.3672"/><ellipse cx="1207" cy="1392.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="complete" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1216" y="1395.5776">complete() const : bool</text></a><a href="" target="_top" title="complete" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1400.1719"/><ellipse cx="1207" cy="1405.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="complete" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1216" y="1408.3823">complete() : void</text></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1412.9766"/><ellipse cx="1207" cy="1417.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1216" y="1421.187">context() const : inja::json</text></a><a href="" target="_top" title="Return the elements fully qualified name." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return the elements fully qualified name." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1425.7813"/><ellipse cx="1207" cy="1430.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Return the elements fully qualified name." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return the elements fully qualified name." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1216" y="1433.9917">full_name() const : std::string</text></a><a href="" target="_top" title="Returns diagram element id." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns diagram element id." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1438.5859"/><ellipse cx="1207" cy="1443.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Returns diagram element id." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Returns diagram element id." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="292" x="1216" y="1446.7964">id() const : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="is_nested" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_nested" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1451.3906"/><ellipse cx="1207" cy="1456.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="is_nested" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_nested" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1216" y="1459.6011">is_nested() const : bool</text></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1464.1953"/><ellipse cx="1207" cy="1469.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1216" y="1472.4058">name() const : std::string</text></a><a href="" target="_top" title="nested" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="nested" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1477"/><ellipse cx="1207" cy="1482" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="nested" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="nested" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1216" y="1485.2104">nested() : void</text></a><a href="" target="_top" title="relationships" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="relationships" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1489.8047"/><ellipse cx="1207" cy="1494.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="relationships" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="relationships" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1216" y="1498.0151">relationships() : std::vector&lt;relationship&gt; &amp;</text></a><a href="" target="_top" title="relationships" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="relationships" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1502.6094"/><ellipse cx="1207" cy="1507.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="relationships" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="relationships" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1216" y="1510.8198">relationships() const : const std::vector&lt;relationship&gt; &amp;</text></a><a href="" target="_top" title="set_id" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1515.4141"/><ellipse cx="1207" cy="1520.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_id" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="1216" y="1523.6245">set_id() : void</text></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1528.2188"/><ellipse cx="1207" cy="1533.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1216" y="1536.4292">set_name() : void</text></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1541.0234"/><ellipse cx="1207" cy="1546.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1216" y="1549.2339">type_name() const : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1197" x2="1545" y1="1555.8281" y2="1555.8281"/><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1561.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1204" y="1563.8281"/></a><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1216" y="1570.0386">complete_ : bool</text></a><a href="" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1574.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1204" y="1576.6328"/></a><a href="" target="_top" title="id_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="1216" y="1582.8433">id_ : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1587.4375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1204" y="1589.4375"/></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1216" y="1595.6479">name_ : std::string</text></a><a href="" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="nested_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1600.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1204" y="1602.2422"/></a><a href="" target="_top" title="nested_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="nested_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="1216" y="1608.4526">nested_ : bool</text></a><a href="" target="_top" title="relationships_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="relationships_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1202" y="1613.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1204" y="1615.0469"/></a><a href="" target="_top" title="relationships_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="relationships_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="1216" y="1621.2573">relationships_ : std::vector&lt;relationship&gt;</text></a><!--MD5=[ff9e0a0bc9f03396ed80b26723707697]
class C_0000197068985320835874--><a href="classclanguml_1_1common_1_1model_1_1diagram.html" target="_top" title="Base class for all diagram models" xlink:actuate="onRequest" xlink:href="classclanguml_1_1common_1_1model_1_1diagram.html" xlink:show="new" xlink:title="Base class for all diagram models" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="355.3125" id="C_0000197068985320835874" style="stroke: #A80036; stroke-width: 1.5;" width="541" x="1901.5" y="1291.9531"/><ellipse cx="2142.25" cy="1307.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2142.3594,1303.2969 L2141.2031,1308.375 L2143.5313,1308.375 L2142.3594,1303.2969 Z M2140.875,1301.0625 L2143.8594,1301.0625 L2147.2188,1313.4531 L2144.7656,1313.4531 L2144,1310.3906 L2140.7188,1310.3906 L2139.9688,1313.4531 L2137.5313,1313.4531 L2140.875,1301.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="51" x="2162.75" y="1312.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1902.5" x2="2441.5" y1="1323.9531" y2="1323.9531"/></a><a href="" target="_top" title="Whether the diagram is complete." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Whether the diagram is complete." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1329.9531"/><ellipse cx="1912.5" cy="1334.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Whether the diagram is complete." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Whether the diagram is complete." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="1921.5" y="1338.1636">complete() const : bool</text></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1342.7578"/><ellipse cx="1912.5" cy="1347.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="context" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="context" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="1921.5" y="1350.9683">context() const = 0 : inja::json</text></a><a href="" target="_top" title="filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1355.5625"/><ellipse cx="1912.5" cy="1360.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="1921.5" y="1363.7729">filter() const : const common::model::diagram_filter &amp;</text></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1368.3672"/><ellipse cx="1912.5" cy="1373.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1921.5" y="1376.5776">finalize() : void</text></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1381.1719"/><ellipse cx="1912.5" cy="1386.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="1921.5" y="1389.3823">get() const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1393.9766"/><ellipse cx="1912.5" cy="1398.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="437" x="1921.5" y="1402.187">get() const = 0 : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="get_with_namespace" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_with_namespace" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1406.7813"/><ellipse cx="1912.5" cy="1411.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="get_with_namespace" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="get_with_namespace" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="1921.5" y="1414.9917">get_with_namespace() const : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="has_element" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="has_element" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1419.5859"/><ellipse cx="1912.5" cy="1424.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="has_element" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="has_element" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1921.5" y="1427.7964">has_element() const : bool</text></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1432.3906"/><ellipse cx="1912.5" cy="1437.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1921.5" y="1440.6011">name() const : std::string</text></a><a href="" target="_top" title="Set diagram in a complete state." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set diagram in a complete state." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1445.1953"/><ellipse cx="1912.5" cy="1450.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set diagram in a complete state." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set diagram in a complete state." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1921.5" y="1453.4058">set_complete() : void</text></a><a href="" target="_top" title="set_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_filter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1458"/><ellipse cx="1912.5" cy="1463" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_filter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_filter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1921.5" y="1466.2104">set_filter() : void</text></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1470.8047"/><ellipse cx="1912.5" cy="1475.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="set_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="set_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1921.5" y="1479.0151">set_name() : void</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1483.6094"/><ellipse cx="1912.5" cy="1488.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1491.8198">should_include() const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1496.4141"/><ellipse cx="1912.5" cy="1501.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1504.6245">should_include() const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1509.2188"/><ellipse cx="1912.5" cy="1514.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1517.4292">should_include() const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1522.0234"/><ellipse cx="1912.5" cy="1527.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1530.2339">should_include() const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1534.8281"/><ellipse cx="1912.5" cy="1539.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1543.0386">should_include() const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1547.6328"/><ellipse cx="1912.5" cy="1552.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1555.8433">should_include() const : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1560.4375"/><ellipse cx="1912.5" cy="1565.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="1921.5" y="1568.6479">should_include() const = deleted : bool</text></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1573.2422"/><ellipse cx="1912.5" cy="1578.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="should_include" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="should_include" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1921.5" y="1581.4526">should_include() const : bool</text></a><a href="" target="_top" title="Return type of the diagram." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return type of the diagram." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1586.0469"/><ellipse cx="1912.5" cy="1591.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Return type of the diagram." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return type of the diagram." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="260" x="1921.5" y="1594.2573">type() const = 0 : common::model::diagram_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="1902.5" x2="2441.5" y1="1600.8516" y2="1600.8516"/><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1606.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1909.5" y="1608.8516"/></a><a href="" target="_top" title="complete_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="complete_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1921.5" y="1615.062">complete_ : bool</text></a><a href="" target="_top" title="filter_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1619.6563"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1909.5" y="1621.6563"/></a><a href="" target="_top" title="filter_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="filter_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1921.5" y="1627.8667">filter_ : std::unique_ptr&lt;diagram_filter&gt;</text></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="1907.5" y="1632.4609"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1909.5" y="1634.4609"/></a><a href="" target="_top" title="name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1921.5" y="1640.6714">name_ : std::string</text></a><!--MD5=[505367997c2b7099e4ddff1763d1acb5]
class C_0001400215772842495226--><a href="structclanguml_1_1sequence__diagram_1_1model_1_1participant.html" target="_top" title="Base class for various types of sequence diagram participants" xlink:actuate="onRequest" xlink:href="structclanguml_1_1sequence__diagram_1_1model_1_1participant.html" xlink:show="new" xlink:title="Base class for various types of sequence diagram participants" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="86.4141" id="C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.5;" width="403" x="297.5" y="638.4531"/><ellipse cx="460.75" cy="654.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M463.7188,660.0938 Q463.1406,660.3906 462.5,660.5313 Q461.8594,660.6875 461.1563,660.6875 Q458.6563,660.6875 457.3281,659.0469 Q456.0156,657.3906 456.0156,654.2656 Q456.0156,651.1406 457.3281,649.4844 Q458.6563,647.8281 461.1563,647.8281 Q461.8594,647.8281 462.5,647.9844 Q463.1563,648.1406 463.7188,648.4375 L463.7188,651.1563 Q463.0938,650.5781 462.5,650.3125 Q461.9063,650.0313 461.2813,650.0313 Q459.9375,650.0313 459.25,651.1094 Q458.5625,652.1719 458.5625,654.2656 Q458.5625,656.3594 459.25,657.4375 Q459.9375,658.5 461.2813,658.5 Q461.9063,658.5 462.5,658.2344 Q463.0938,657.9531 463.7188,657.375 L463.7188,660.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="68" x="481.25" y="658.6074">participant</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="298.5" x2="699.5" y1="670.4531" y2="670.4531"/></a><a href="" target="_top" title="Create a string representation of the participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Create a string representation of the participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="303.5" y="676.4531"/><ellipse cx="308.5" cy="681.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Create a string representation of the participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Create a string representation of the participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="317.5" y="684.6636">to_string() const : std::string</text></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="303.5" y="689.2578"/><ellipse cx="308.5" cy="694.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="317.5" y="697.4683">type_name() const : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="298.5" x2="699.5" y1="704.0625" y2="704.0625"/><a href="" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="303.5" y="710.0625"/><ellipse cx="308.5" cy="715.0625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="stereotype_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="stereotype_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="317.5" y="718.2729">stereotype_ : sequence_diagram::model::participant::stereotype_t</text></a><!--MD5=[b4d475f36669eac2ac4b1a7424da64db]
class C_0000885514871619471610--><a href="structclanguml_1_1sequence__diagram_1_1model_1_1class__.html" target="_top" title="Sequence diagram participant representing a class." xlink:actuate="onRequest" xlink:href="structclanguml_1_1sequence__diagram_1_1model_1_1class__.html" xlink:show="new" xlink:title="Sequence diagram participant representing a class." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="304.0938" id="C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="62.5" y="833.9531"/><ellipse cx="162.75" cy="849.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M165.7188,855.5938 Q165.1406,855.8906 164.5,856.0313 Q163.8594,856.1875 163.1563,856.1875 Q160.6563,856.1875 159.3281,854.5469 Q158.0156,852.8906 158.0156,849.7656 Q158.0156,846.6406 159.3281,844.9844 Q160.6563,843.3281 163.1563,843.3281 Q163.8594,843.3281 164.5,843.4844 Q165.1563,843.6406 165.7188,843.9375 L165.7188,846.6563 Q165.0938,846.0781 164.5,845.8125 Q163.9063,845.5313 163.2813,845.5313 Q161.9375,845.5313 161.25,846.6094 Q160.5625,847.6719 160.5625,849.7656 Q160.5625,851.8594 161.25,852.9375 Q161.9375,854 163.2813,854 Q163.9063,854 164.5,853.7344 Q165.0938,853.4531 165.7188,852.875 L165.7188,855.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="183.25" y="854.1074">class_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="63.5" x2="308.5" y1="865.9531" y2="865.9531"/></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="871.9531"/><ellipse cx="73.5" cy="876.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="82.5" y="880.1636">full_name() const : std::string</text></a><a href="" target="_top" title="full_name_no_ns" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_no_ns" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="884.7578"/><ellipse cx="73.5" cy="889.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name_no_ns" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_no_ns" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="82.5" y="892.9683">full_name_no_ns() const : std::string</text></a><a href="" target="_top" title="Check if class is a abstract." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a abstract." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="897.5625"/><ellipse cx="73.5" cy="902.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if class is a abstract." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a abstract." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="82.5" y="905.7729">is_abstract() const : bool</text></a><a href="" target="_top" title="Check if class is a typedef/using alias." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a typedef/using alias." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="910.3672"/><ellipse cx="73.5" cy="915.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if class is a typedef/using alias." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a typedef/using alias." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="82.5" y="918.5776">is_alias() const : bool</text></a><a href="" target="_top" title="Set whether the class is an alias" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is an alias" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="923.1719"/><ellipse cx="73.5" cy="928.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the class is an alias" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is an alias" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="82.5" y="931.3823">is_alias() : void</text></a><a href="" target="_top" title="Check if the class is lambda" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if the class is lambda" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="935.9766"/><ellipse cx="73.5" cy="940.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if the class is lambda" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if the class is lambda" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="82.5" y="944.187">is_lambda() const : bool</text></a><a href="" target="_top" title="Set whether the class is a lambda." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a lambda." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="948.7813"/><ellipse cx="73.5" cy="953.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the class is a lambda." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a lambda." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="82.5" y="956.9917">is_lambda() : void</text></a><a href="" target="_top" title="Check if class is a struct." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a struct." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="961.5859"/><ellipse cx="73.5" cy="966.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if class is a struct." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a struct." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="82.5" y="969.7964">is_struct() const : bool</text></a><a href="" target="_top" title="Set whether the class is a struct." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a struct." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="974.3906"/><ellipse cx="73.5" cy="979.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the class is a struct." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a struct." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="82.5" y="982.6011">is_struct() : void</text></a><a href="" target="_top" title="Check if class is a template." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a template." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="987.1953"/><ellipse cx="73.5" cy="992.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if class is a template." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a template." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="82.5" y="995.4058">is_template() const : bool</text></a><a href="" target="_top" title="Set whether the class is a template instantiation." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a template instantiation." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1000"/><ellipse cx="73.5" cy="1005" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the class is a template instantiation." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a template instantiation." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="82.5" y="1008.2104">is_template() : void</text></a><a href="" target="_top" title="Check if class is a template instantiation." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a template instantiation." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1012.8047"/><ellipse cx="73.5" cy="1017.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if class is a template instantiation." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if class is a template instantiation." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="82.5" y="1021.0151">is_template_instantiation() const : bool</text></a><a href="" target="_top" title="Set whether the class is a template instantiation." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a template instantiation." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1025.6094"/><ellipse cx="73.5" cy="1030.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the class is a template instantiation." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the class is a template instantiation." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="82.5" y="1033.8198">is_template_instantiation() : void</text></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1038.4141"/><ellipse cx="73.5" cy="1043.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="82.5" y="1046.6245">type_name() const : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="63.5" x2="308.5" y1="1053.2188" y2="1053.2188"/><a href="" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1059.2188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="1061.2188"/></a><a href="" target="_top" title="full_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="82.5" y="1067.4292">full_name_ : std::string</text></a><a href="" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1072.0234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="1074.0234"/></a><a href="" target="_top" title="is_alias_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_alias_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="82.5" y="1080.2339">is_alias_ : bool</text></a><a href="" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1084.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="1086.8281"/></a><a href="" target="_top" title="is_lambda_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_lambda_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="82.5" y="1093.0386">is_lambda_ : bool</text></a><a href="" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1097.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="1099.6328"/></a><a href="" target="_top" title="is_struct_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_struct_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="82.5" y="1105.8433">is_struct_ : bool</text></a><a href="" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1110.4375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="1112.4375"/></a><a href="" target="_top" title="is_template_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_template_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="82.5" y="1118.6479">is_template_ : bool</text></a><a href="" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="68.5" y="1123.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="70.5" y="1125.2422"/></a><a href="" target="_top" title="is_template_instantiation_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_template_instantiation_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="82.5" y="1131.4526">is_template_instantiation_ : bool</text></a><!--MD5=[fea9086604aaaceeec1cf807579b2064]
class C_0000232638456031681828--><a href="structclanguml_1_1sequence__diagram_1_1model_1_1function.html" target="_top" title="Participant mode representing a free function." xlink:actuate="onRequest" xlink:href="structclanguml_1_1sequence__diagram_1_1model_1_1function.html" xlink:show="new" xlink:title="Participant mode representing a free function." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="329.7031" id="C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="344.5" y="820.9531"/><ellipse cx="482.25" cy="836.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M485.2188,842.5938 Q484.6406,842.8906 484,843.0313 Q483.3594,843.1875 482.6563,843.1875 Q480.1563,843.1875 478.8281,841.5469 Q477.5156,839.8906 477.5156,836.7656 Q477.5156,833.6406 478.8281,831.9844 Q480.1563,830.3281 482.6563,830.3281 Q483.3594,830.3281 484,830.4844 Q484.6563,830.6406 485.2188,830.9375 L485.2188,833.6563 Q484.5938,833.0781 484,832.8125 Q483.4063,832.5313 482.7813,832.5313 Q481.4375,832.5313 480.75,833.6094 Q480.0625,834.6719 480.0625,836.7656 Q480.0625,838.8594 480.75,839.9375 Q481.4375,841 482.7813,841 Q483.4063,841 484,840.7344 Q484.5938,840.4531 485.2188,839.875 L485.2188,842.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="502.75" y="841.1074">function</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="678.5" y1="852.9531" y2="852.9531"/></a><a href="" target="_top" title="Add a function parameter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add a function parameter" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="858.9531"/><ellipse cx="355.5" cy="863.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Add a function parameter" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add a function parameter" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="364.5" y="867.1636">add_parameter() : void</text></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="871.7578"/><ellipse cx="355.5" cy="876.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="364.5" y="879.9683">full_name() const : std::string</text></a><a href="" target="_top" title="full_name_no_ns" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_no_ns" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="884.5625"/><ellipse cx="355.5" cy="889.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name_no_ns" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_no_ns" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="364.5" y="892.7729">full_name_no_ns() const : std::string</text></a><a href="" target="_top" title="Check if function is const" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if function is const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="897.3672"/><ellipse cx="355.5" cy="902.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check if function is const" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check if function is const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="364.5" y="905.5776">is_const() const : bool</text></a><a href="" target="_top" title="Set whether the function is const" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the function is const" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="910.1719"/><ellipse cx="355.5" cy="915.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the function is const" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the function is const" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="364.5" y="918.3823">is_const() : void</text></a><a href="" target="_top" title="Check, if the method is an operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is an operator" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="922.9766"/><ellipse cx="355.5" cy="927.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check, if the method is an operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is an operator" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="364.5" y="931.187">is_operator() const : bool</text></a><a href="" target="_top" title="Set whether the method is an operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is an operator" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="935.7813"/><ellipse cx="355.5" cy="940.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the method is an operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is an operator" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="364.5" y="943.9917">is_operator() : void</text></a><a href="" target="_top" title="Check, if the function is static" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the function is static" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="948.5859"/><ellipse cx="355.5" cy="953.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check, if the function is static" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the function is static" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="364.5" y="956.7964">is_static() const : bool</text></a><a href="" target="_top" title="Set whether the function is static" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the function is static" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="961.3906"/><ellipse cx="355.5" cy="966.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the function is static" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the function is static" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="364.5" y="969.6011">is_static() : void</text></a><a href="" target="_top" title="Check, if the function has no return value" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the function has no return value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="974.1953"/><ellipse cx="355.5" cy="979.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check, if the function has no return value" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the function has no return value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="364.5" y="982.4058">is_void() const : bool</text></a><a href="" target="_top" title="Set whether the function has a return value" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the function has a return value" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="987"/><ellipse cx="355.5" cy="992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the function has a return value" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the function has a return value" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="364.5" y="995.2104">is_void() : void</text></a><a href="" target="_top" title="Render function name as message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Render function name as message label" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="999.8047"/><ellipse cx="355.5" cy="1004.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Render function name as message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Render function name as message label" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="364.5" y="1008.0151">message_name() const : std::string</text></a><a href="" target="_top" title="Get the list of function parameters" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the list of function parameters" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1012.6094"/><ellipse cx="355.5" cy="1017.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the list of function parameters" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the list of function parameters" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="364.5" y="1020.8198">parameters() const : const std::vector&lt;std::string&gt; &amp;</text></a><a href="" target="_top" title="Set functions return type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set functions return type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1025.4141"/><ellipse cx="355.5" cy="1030.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set functions return type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set functions return type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="364.5" y="1033.6245">return_type() : void</text></a><a href="" target="_top" title="Get function return type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get function return type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1038.2188"/><ellipse cx="355.5" cy="1043.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get function return type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get function return type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="364.5" y="1046.4292">return_type() const : const std::string &amp;</text></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1051.0234"/><ellipse cx="355.5" cy="1056.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="364.5" y="1059.2339">type_name() const : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="678.5" y1="1065.8281" y2="1065.8281"/><a href="" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1071.8281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="352.5" y="1073.8281"/></a><a href="" target="_top" title="is_const_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_const_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="364.5" y="1080.0386">is_const_ : bool</text></a><a href="" target="_top" title="is_operator_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_operator_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1084.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="352.5" y="1086.6328"/></a><a href="" target="_top" title="is_operator_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_operator_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="364.5" y="1092.8433">is_operator_ : bool</text></a><a href="" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1097.4375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="352.5" y="1099.4375"/></a><a href="" target="_top" title="is_static_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_static_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="364.5" y="1105.6479">is_static_ : bool</text></a><a href="" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1110.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="352.5" y="1112.2422"/></a><a href="" target="_top" title="is_void_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_void_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="364.5" y="1118.4526">is_void_ : bool</text></a><a href="" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1123.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="352.5" y="1125.0469"/></a><a href="" target="_top" title="parameters_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="parameters_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="364.5" y="1131.2573">parameters_ : std::vector&lt;std::string&gt;</text></a><a href="" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="350.5" y="1135.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="352.5" y="1137.8516"/></a><a href="" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="364.5" y="1144.062">return_type_ : std::string</text></a><!--MD5=[78f12b5739bf72f527e2506c0e981f4b]
class C_0000817665972547784504--><a href="structclanguml_1_1sequence__diagram_1_1model_1_1method.html" target="_top" title="Participant model representing a method" xlink:actuate="onRequest" xlink:href="structclanguml_1_1sequence__diagram_1_1model_1_1method.html" xlink:show="new" xlink:title="Participant model representing a method" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="342.5078" id="C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="279" y="1297.9531"/><ellipse cx="377.75" cy="1313.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.7188,1319.5938 Q380.1406,1319.8906 379.5,1320.0313 Q378.8594,1320.1875 378.1563,1320.1875 Q375.6563,1320.1875 374.3281,1318.5469 Q373.0156,1316.8906 373.0156,1313.7656 Q373.0156,1310.6406 374.3281,1308.9844 Q375.6563,1307.3281 378.1563,1307.3281 Q378.8594,1307.3281 379.5,1307.4844 Q380.1563,1307.6406 380.7188,1307.9375 L380.7188,1310.6563 Q380.0938,1310.0781 379.5,1309.8125 Q378.9063,1309.5313 378.2813,1309.5313 Q376.9375,1309.5313 376.25,1310.6094 Q375.5625,1311.6719 375.5625,1313.7656 Q375.5625,1315.8594 376.25,1316.9375 Q376.9375,1318 378.2813,1318 Q378.9063,1318 379.5,1317.7344 Q380.0938,1317.4531 380.7188,1316.875 L380.7188,1319.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="398.25" y="1318.1074">method</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="280" x2="532" y1="1329.9531" y2="1329.9531"/></a><a href="" target="_top" title="Get the participant PlantUML alias" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the participant PlantUML alias" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1335.9531"/><ellipse cx="290" cy="1340.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the participant PlantUML alias" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the participant PlantUML alias" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="299" y="1344.1636">alias() const : std::string</text></a><a href="" target="_top" title="Get the class full name." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the class full name." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1348.7578"/><ellipse cx="290" cy="1353.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the class full name." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the class full name." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="299" y="1356.9683">class_full_name() const : const auto &amp;</text></a><a href="" target="_top" title="Get the class id" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the class id" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1361.5625"/><ellipse cx="290" cy="1366.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the class id" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the class id" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="299" y="1369.7729">class_id() const : diagram_element::id_t</text></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1374.3672"/><ellipse cx="290" cy="1379.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="299" y="1382.5776">full_name() const : std::string</text></a><a href="" target="_top" title="Set whether the method is an assignment operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is an assignment operator" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1387.1719"/><ellipse cx="290" cy="1392.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the method is an assignment operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is an assignment operator" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="299" y="1395.3823">is_assignment() : void</text></a><a href="" target="_top" title="Check, if the method is an assignment operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is an assignment operator" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1399.9766"/><ellipse cx="290" cy="1404.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check, if the method is an assignment operator" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is an assignment operator" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="299" y="1408.187">is_assignment() const : bool</text></a><a href="" target="_top" title="Set whether the method is a constructor" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is a constructor" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1412.7813"/><ellipse cx="290" cy="1417.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the method is a constructor" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is a constructor" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="299" y="1420.9917">is_constructor() : void</text></a><a href="" target="_top" title="Check, if the method is a constructor" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is a constructor" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1425.5859"/><ellipse cx="290" cy="1430.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check, if the method is a constructor" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is a constructor" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="299" y="1433.7964">is_constructor() const : bool</text></a><a href="" target="_top" title="Set whether the method is defaulted" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is defaulted" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1438.3906"/><ellipse cx="290" cy="1443.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set whether the method is defaulted" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set whether the method is defaulted" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="299" y="1446.6011">is_defaulted() : void</text></a><a href="" target="_top" title="Check, if the method is defaulted" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is defaulted" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1451.1953"/><ellipse cx="290" cy="1456.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Check, if the method is defaulted" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Check, if the method is defaulted" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="299" y="1459.4058">is_defaulted() const : bool</text></a><a href="" target="_top" title="message_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="message_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1464"/><ellipse cx="290" cy="1469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="message_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="message_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="299" y="1472.2104">message_name() const : std::string</text></a><a href="" target="_top" title="Get method name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get method name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1476.8047"/><ellipse cx="290" cy="1481.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get method name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get method name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="299" y="1485.0151">method_name() const : std::string</text></a><a href="" target="_top" title="Set full qualified name of the class" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set full qualified name of the class" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1489.6094"/><ellipse cx="290" cy="1494.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set full qualified name of the class" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set full qualified name of the class" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="299" y="1497.8198">set_class_full_name() : void</text></a><a href="" target="_top" title="Set the id of the participant to which this method belongs to." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the id of the participant to which this method belongs to." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1502.4141"/><ellipse cx="290" cy="1507.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set the id of the participant to which this method belongs to." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the id of the participant to which this method belongs to." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="299" y="1510.6245">set_class_id() : void</text></a><a href="" target="_top" title="Set method name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set method name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1515.2188"/><ellipse cx="290" cy="1520.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set method name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set method name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="299" y="1523.4292">set_method_name() : void</text></a><a href="" target="_top" title="Create a string representation of the participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Create a string representation of the participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1528.0234"/><ellipse cx="290" cy="1533.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Create a string representation of the participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Create a string representation of the participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="299" y="1536.2339">to_string() const : std::string</text></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1540.8281"/><ellipse cx="290" cy="1545.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="299" y="1549.0386">type_name() const : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="280" x2="532" y1="1555.6328" y2="1555.6328"/><a href="" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1561.6328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="287" y="1563.6328"/></a><a href="" target="_top" title="class_full_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="class_full_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="299" y="1569.8433">class_full_name_ : std::string</text></a><a href="" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1574.4375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="287" y="1576.4375"/></a><a href="" target="_top" title="class_id_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="class_id_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="299" y="1582.6479">class_id_ : diagram_element::id_t</text></a><a href="" target="_top" title="is_assignment_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_assignment_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1587.2422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="287" y="1589.2422"/></a><a href="" target="_top" title="is_assignment_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_assignment_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="299" y="1595.4526">is_assignment_ : bool</text></a><a href="" target="_top" title="is_constructor_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_constructor_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1600.0469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="287" y="1602.0469"/></a><a href="" target="_top" title="is_constructor_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_constructor_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="299" y="1608.2573">is_constructor_ : bool</text></a><a href="" target="_top" title="is_defaulted_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_defaulted_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1612.8516"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="287" y="1614.8516"/></a><a href="" target="_top" title="is_defaulted_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_defaulted_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="299" y="1621.062">is_defaulted_ : bool</text></a><a href="" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="285" y="1625.6563"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="287" y="1627.6563"/></a><a href="" target="_top" title="method_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="method_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="299" y="1633.8667">method_name_ : std::string</text></a><!--MD5=[32d760b788d79d5e0bfcc0697e979e7d]
class C_0002280191967493310558--><a href="structclanguml_1_1sequence__diagram_1_1model_1_1function__template.html" target="_top" title="Participant model representing a function template." xlink:actuate="onRequest" xlink:href="structclanguml_1_1sequence__diagram_1_1model_1_1function__template.html" xlink:show="new" xlink:title="Participant model representing a function template." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="99.2188" id="C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.5;" width="235" x="568.5" y="1419.9531"/><ellipse cx="625.25" cy="1435.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M628.2188,1441.5938 Q627.6406,1441.8906 627,1442.0313 Q626.3594,1442.1875 625.6563,1442.1875 Q623.1563,1442.1875 621.8281,1440.5469 Q620.5156,1438.8906 620.5156,1435.7656 Q620.5156,1432.6406 621.8281,1430.9844 Q623.1563,1429.3281 625.6563,1429.3281 Q626.3594,1429.3281 627,1429.4844 Q627.6563,1429.6406 628.2188,1429.9375 L628.2188,1432.6563 Q627.5938,1432.0781 627,1431.8125 Q626.4063,1431.5313 625.7813,1431.5313 Q624.4375,1431.5313 623.75,1432.6094 Q623.0625,1433.6719 623.0625,1435.7656 Q623.0625,1437.8594 623.75,1438.9375 Q624.4375,1440 625.7813,1440 Q626.4063,1440 627,1439.7344 Q627.5938,1439.4531 628.2188,1438.875 L628.2188,1441.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="645.75" y="1440.1074">function_template</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="569.5" x2="802.5" y1="1451.9531" y2="1451.9531"/></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="574.5" y="1457.9531"/><ellipse cx="579.5" cy="1462.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="588.5" y="1466.1636">full_name() const : std::string</text></a><a href="" target="_top" title="full_name_no_ns" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_no_ns" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="574.5" y="1470.7578"/><ellipse cx="579.5" cy="1475.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="full_name_no_ns" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="full_name_no_ns" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="588.5" y="1478.9683">full_name_no_ns() const : std::string</text></a><a href="" target="_top" title="Render function name as message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Render function name as message label" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="574.5" y="1483.5625"/><ellipse cx="579.5" cy="1488.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Render function name as message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Render function name as message label" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="588.5" y="1491.7729">message_name() const : std::string</text></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="574.5" y="1496.3672"/><ellipse cx="579.5" cy="1501.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="type_name" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_name" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="588.5" y="1504.5776">type_name() const : std::string</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="569.5" x2="802.5" y1="1511.1719" y2="1511.1719"/><!--MD5=[d938ea8dcef347175d1d053a93bab664]
class C_0002228653068706235818--><a href="classclanguml_1_1sequence__diagram_1_1model_1_1message.html" target="_top" title="Model of a sequence diagram message." xlink:actuate="onRequest" xlink:href="classclanguml_1_1sequence__diagram_1_1model_1_1message.html" xlink:show="new" xlink:title="Model of a sequence diagram message." xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="316.8984" id="C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="714.5" y="827.4531"/><ellipse cx="870.25" cy="843.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M873.2188,849.0938 Q872.6406,849.3906 872,849.5313 Q871.3594,849.6875 870.6563,849.6875 Q868.1563,849.6875 866.8281,848.0469 Q865.5156,846.3906 865.5156,843.2656 Q865.5156,840.1406 866.8281,838.4844 Q868.1563,836.8281 870.6563,836.8281 Q871.3594,836.8281 872,836.9844 Q872.6563,837.1406 873.2188,837.4375 L873.2188,840.1563 Q872.5938,839.5781 872,839.3125 Q871.4063,839.0313 870.7813,839.0313 Q869.4375,839.0313 868.75,840.1094 Q868.0625,841.1719 868.0625,843.2656 Q868.0625,845.3594 868.75,846.4375 Q869.4375,847.5 870.7813,847.5 Q871.4063,847.5 872,847.2344 Q872.5938,846.9531 873.2188,846.375 L873.2188,849.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="57" x="890.75" y="847.6074">message</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="715.5" x2="1090.5" y1="859.4531" y2="859.4531"/></a><a href="" target="_top" title="Set condition text for block statements (e.g. if( &lt;THIS  TEXT&gt;))" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set condition text for block statements (e.g. if( &lt;THIS  TEXT&gt;))" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="865.4531"/><ellipse cx="725.5" cy="870.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set condition text for block statements (e.g. if( &lt;THIS  TEXT&gt;))" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set condition text for block statements (e.g. if( &lt;THIS  TEXT&gt;))" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="734.5" y="873.6636">condition_text() : void</text></a><a href="" target="_top" title="Get condition text" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get condition text" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="878.2578"/><ellipse cx="725.5" cy="883.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get condition text" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get condition text" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="734.5" y="886.4683">condition_text() const : std::optional&lt;std::string&gt;</text></a><a href="" target="_top" title="Get the id of source of message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the id of source of message" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="891.0625"/><ellipse cx="725.5" cy="896.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the id of source of message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the id of source of message" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="734.5" y="899.2729">from() const : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="Get the message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the message label" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="903.8672"/><ellipse cx="725.5" cy="908.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the message label" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="734.5" y="912.0776">message_name() const : const std::string &amp;</text></a><a href="" target="_top" title="Get message scope" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get message scope" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="916.6719"/><ellipse cx="725.5" cy="921.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get message scope" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get message scope" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="734.5" y="924.8823">message_scope() const : common::model::message_scope_t</text></a><a href="" target="_top" title="Get the return message type label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the return message type label" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="929.4766"/><ellipse cx="725.5" cy="934.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the return message type label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the return message type label" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="734.5" y="937.687">return_type() const : const std::string &amp;</text></a><a href="" target="_top" title="Set the id of message source participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the id of message source participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="942.2813"/><ellipse cx="725.5" cy="947.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set the id of message source participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the id of message source participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="734.5" y="950.4917">set_from() : void</text></a><a href="" target="_top" title="Set the message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the message label" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="955.0859"/><ellipse cx="725.5" cy="960.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set the message label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the message label" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="734.5" y="963.2964">set_message_name() : void</text></a><a href="" target="_top" title="Set message scope" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set message scope" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="967.8906"/><ellipse cx="725.5" cy="972.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set message scope" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set message scope" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="734.5" y="976.1011">set_message_scope() : void</text></a><a href="" target="_top" title="Set the return message type label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the return message type label" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="980.6953"/><ellipse cx="725.5" cy="985.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set the return message type label" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the return message type label" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="734.5" y="988.9058">set_return_type() : void</text></a><a href="" target="_top" title="Set the id of the message target" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the id of the message target" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="993.5"/><ellipse cx="725.5" cy="998.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set the id of the message target" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set the id of the message target" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="734.5" y="1001.7104">set_to() : void</text></a><a href="" target="_top" title="Set message type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set message type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1006.3047"/><ellipse cx="725.5" cy="1011.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set message type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set message type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="734.5" y="1014.5151">set_type() : void</text></a><a href="" target="_top" title="Get the id of the message target" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the id of the message target" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1019.1094"/><ellipse cx="725.5" cy="1024.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the id of the message target" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the id of the message target" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="734.5" y="1027.3198">to() const : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="Get message type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get message type" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1031.9141"/><ellipse cx="725.5" cy="1036.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get message type" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get message type" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="734.5" y="1040.1245">type() const : common::model::message_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="715.5" x2="1090.5" y1="1046.7188" y2="1046.7188"/><a href="" target="_top" title="condition_text_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="condition_text_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1052.7188"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1054.7188"/></a><a href="" target="_top" title="condition_text_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="condition_text_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="734.5" y="1060.9292">condition_text_ : std::optional&lt;std::string&gt;</text></a><a href="" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1065.5234"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1067.5234"/></a><a href="" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="734.5" y="1073.7339">from_ : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1078.3281"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1080.3281"/></a><a href="" target="_top" title="message_name_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="message_name_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="734.5" y="1086.5386">message_name_ : std::string</text></a><a href="" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1091.1328"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1093.1328"/></a><a href="" target="_top" title="return_type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="return_type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="734.5" y="1099.3433">return_type_ : std::string</text></a><a href="" target="_top" title="scope_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="scope_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1103.9375"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1105.9375"/></a><a href="" target="_top" title="scope_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="scope_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="734.5" y="1112.1479">scope_ : common::model::message_scope_t</text></a><a href="" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="to_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1116.7422"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1118.7422"/></a><a href="" target="_top" title="to_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="to_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="734.5" y="1124.9526">to_ : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="720.5" y="1129.5469"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="722.5" y="1131.5469"/></a><a href="" target="_top" title="type_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="type_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="734.5" y="1137.7573">type_ : common::model::message_t</text></a><!--MD5=[1f8594e8e98680e5eb77b5543c1d2d76]
class C_0000460030520790196523--><a href="classclanguml_1_1sequence__diagram_1_1model_1_1activity.html" target="_top" title="Model of a sequence diagram activity" xlink:actuate="onRequest" xlink:href="classclanguml_1_1sequence__diagram_1_1model_1_1activity.html" xlink:show="new" xlink:title="Model of a sequence diagram activity" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="124.8281" id="C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.5;" width="335" x="735.5" y="618.9531"/><ellipse cx="877.25" cy="634.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M880.2188,640.5938 Q879.6406,640.8906 879,641.0313 Q878.3594,641.1875 877.6563,641.1875 Q875.1563,641.1875 873.8281,639.5469 Q872.5156,637.8906 872.5156,634.7656 Q872.5156,631.6406 873.8281,629.9844 Q875.1563,628.3281 877.6563,628.3281 Q878.3594,628.3281 879,628.4844 Q879.6563,628.6406 880.2188,628.9375 L880.2188,631.6563 Q879.5938,631.0781 879,630.8125 Q878.4063,630.5313 877.7813,630.5313 Q876.4375,630.5313 875.75,631.6094 Q875.0625,632.6719 875.0625,634.7656 Q875.0625,636.8594 875.75,637.9375 Q876.4375,639 877.7813,639 Q878.4063,639 879,638.7344 Q879.5938,638.4531 880.2188,637.875 L880.2188,640.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="897.75" y="639.1074">activity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="736.5" x2="1069.5" y1="650.9531" y2="650.9531"/></a><a href="" target="_top" title="Add a message call to the activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add a message call to the activity" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="741.5" y="656.9531"/><ellipse cx="746.5" cy="661.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Add a message call to the activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add a message call to the activity" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="755.5" y="665.1636">add_message() : void</text></a><a href="" target="_top" title="Get the id of activity parent participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the id of activity parent participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="741.5" y="669.7578"/><ellipse cx="746.5" cy="674.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the id of activity parent participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the id of activity parent participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="755.5" y="677.9683">from() const : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="Get list of messages in the activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get list of messages in the activity" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="741.5" y="682.5625"/><ellipse cx="746.5" cy="687.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get list of messages in the activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get list of messages in the activity" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="755.5" y="690.7729">messages() : std::vector&lt;message&gt; &amp;</text></a><a href="" target="_top" title="Get list of messages in the activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get list of messages in the activity" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="741.5" y="695.3672"/><ellipse cx="746.5" cy="700.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get list of messages in the activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get list of messages in the activity" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="755.5" y="703.5776">messages() const : const std::vector&lt;message&gt; &amp;</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="736.5" x2="1069.5" y1="710.1719" y2="710.1719"/><a href="" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="from_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="741.5" y="716.1719"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="743.5" y="718.1719"/></a><a href="" target="_top" title="from_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="from_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="755.5" y="724.3823">from_ : common::model::diagram_element::id_t</text></a><a href="" target="_top" title="messages_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="messages_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="741.5" y="728.9766"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="743.5" y="730.9766"/></a><a href="" target="_top" title="messages_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="messages_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="755.5" y="737.187">messages_ : std::vector&lt;message&gt;</text></a><!--MD5=[4ac8ef68b016624e17a7e7cc10156a8f]
class C_0000924044572035510976--><a href="classclanguml_1_1sequence__diagram_1_1model_1_1diagram.html" target="_top" title="Model of a sequence diagram" xlink:actuate="onRequest" xlink:href="classclanguml_1_1sequence__diagram_1_1model_1_1diagram.html" xlink:show="new" xlink:title="Model of a sequence diagram" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f13layccf7i1ld)" height="419.3359" id="C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.5;" width="661" x="430.5" y="122.9531"/><ellipse cx="731.25" cy="138.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M734.2188,144.5938 Q733.6406,144.8906 733,145.0313 Q732.3594,145.1875 731.6563,145.1875 Q729.1563,145.1875 727.8281,143.5469 Q726.5156,141.8906 726.5156,138.7656 Q726.5156,135.6406 727.8281,133.9844 Q729.1563,132.3281 731.6563,132.3281 Q732.3594,132.3281 733,132.4844 Q733.6563,132.6406 734.2188,132.9375 L734.2188,135.6563 Q733.5938,135.0781 733,134.8125 Q732.4063,134.5313 731.7813,134.5313 Q730.4375,134.5313 729.75,135.6094 Q729.0625,136.6719 729.0625,138.7656 Q729.0625,140.8594 729.75,141.9375 Q730.4375,143 731.7813,143 Q732.4063,143 733,142.7344 Q733.5938,142.4531 734.2188,141.875 L734.2188,144.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="751.75" y="143.1074">diagram</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="431.5" x2="1090.5" y1="154.9531" y2="154.9531"/></a><a href="" target="_top" title="Get all active participants in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get all active participants in the diagram" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="160.9531"/><ellipse cx="441.5" cy="165.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get all active participants in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get all active participants in the diagram" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="450.5" y="169.1636">active_participants() : std::set&lt;common::model::diagram_element::id_t&gt; &amp;</text></a><a href="" target="_top" title="Set participant with `id` as active" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set participant with `id` as active" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="173.7578"/><ellipse cx="441.5" cy="178.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Set participant with `id` as active" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Set participant with `id` as active" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="450.5" y="181.9683">add_active_participant() : void</text></a><a href="" target="_top" title="Add block message to the current activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add block message to the current activity" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="186.5625"/><ellipse cx="441.5" cy="191.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Add block message to the current activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add block message to the current activity" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="450.5" y="194.7729">add_block_message() : void</text></a><a href="" target="_top" title="Add `switch` block `case` statement" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add `switch` block `case` statement" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="199.3672"/><ellipse cx="441.5" cy="204.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Add `switch` block `case` statement" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add `switch` block `case` statement" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="450.5" y="207.5776">add_case_stmt_message() : void</text></a><a href="" target="_top" title="Add message to current activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add message to current activity" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="212.1719"/><ellipse cx="441.5" cy="217.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Add message to current activity" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add message to current activity" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="450.5" y="220.3823">add_message() : void</text></a><a href="" target="_top" title="Add sequence diagram participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add sequence diagram participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="224.9766"/><ellipse cx="441.5" cy="229.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Add sequence diagram participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Add sequence diagram participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="450.5" y="233.187">add_participant() : void</text></a><a href="" target="_top" title="Return the elements JSON context for inja templates." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return the elements JSON context for inja templates." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="237.7813"/><ellipse cx="441.5" cy="242.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Return the elements JSON context for inja templates." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Return the elements JSON context for inja templates." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="450.5" y="245.9917">context() const : inja::json</text></a><a href="" target="_top" title="End current block message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="End current block message" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="250.5859"/><ellipse cx="441.5" cy="255.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="End current block message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="End current block message" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="450.5" y="258.7964">end_block_message() : void</text></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="263.3906"/><ellipse cx="441.5" cy="268.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Once the diagram is complete, run any final processing." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Once the diagram is complete, run any final processing." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="450.5" y="271.6011">finalize() : void</text></a><a href="" target="_top" title="fold_or_end_block_statement" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="fold_or_end_block_statement" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="276.1953"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="278.1953"/></a><a href="" target="_top" title="fold_or_end_block_statement" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="fold_or_end_block_statement" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="450.5" y="284.4058">fold_or_end_block_statement() const : void</text></a><a href="" target="_top" title="Search for element in the diagram by fully qualified name." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Search for element in the diagram by fully qualified name." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="289"/><ellipse cx="441.5" cy="294" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Search for element in the diagram by fully qualified name." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Search for element in the diagram by fully qualified name." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="450.5" y="297.2104">get() const : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="Search for element in the diagram by id." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Search for element in the diagram by id." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="301.8047"/><ellipse cx="441.5" cy="306.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Search for element in the diagram by id." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Search for element in the diagram by id." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="450.5" y="310.0151">get() const : common::optional_ref&lt;common::model::diagram_element&gt;</text></a><a href="" target="_top" title="Get reference to current activity of a participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get reference to current activity of a participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="314.6094"/><ellipse cx="441.5" cy="319.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get reference to current activity of a participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get reference to current activity of a participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="450.5" y="322.8198">get_activity() : sequence_diagram::model::activity &amp;</text></a><ellipse cx="441.5" cy="332.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="450.5" y="335.6245">get_participant&lt;T&gt;() const : common::optional_ref&lt;T&gt;</text><a href="" target="_top" title="is_begin_block_message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_begin_block_message" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="340.2188"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="342.2188"/></a><a href="" target="_top" title="is_begin_block_message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_begin_block_message" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="450.5" y="348.4292">is_begin_block_message() : bool</text></a><a href="" target="_top" title="is_end_block_message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_end_block_message" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="353.0234"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="355.0234"/></a><a href="" target="_top" title="is_end_block_message" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="is_end_block_message" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="450.5" y="361.2339">is_end_block_message() : bool</text></a><a href="" target="_top" title="Get list of all possible 'start_from' values in the model" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get list of all possible 'start_from' values in the model" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="365.8281"/><ellipse cx="441.5" cy="370.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get list of all possible 'start_from' values in the model" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get list of all possible 'start_from' values in the model" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="450.5" y="374.0386">list_start_from_values() const : std::vector&lt;std::string&gt;</text></a><a href="" target="_top" title="Get map of all participants in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get map of all participants in the diagram" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="378.6328"/><ellipse cx="441.5" cy="383.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get map of all participants in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get map of all participants in the diagram" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="450.5" y="386.8433">participants() const : const std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text></a><a href="" target="_top" title="Get map of all participants in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get map of all participants in the diagram" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="391.4375"/><ellipse cx="441.5" cy="396.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get map of all participants in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get map of all participants in the diagram" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="565" x="450.5" y="399.6479">participants() : std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt; &amp;</text></a><a href="" target="_top" title="Debug method for printing entire diagram to console." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Debug method for printing entire diagram to console." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="404.2422"/><ellipse cx="441.5" cy="409.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Debug method for printing entire diagram to console." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Debug method for printing entire diagram to console." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="450.5" y="412.4526">print() const : void</text></a><a href="" target="_top" title="Get all sequences in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get all sequences in the diagram" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="417.0469"/><ellipse cx="441.5" cy="422.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get all sequences in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get all sequences in the diagram" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="505" x="450.5" y="425.2573">sequences() const : const std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text></a><a href="" target="_top" title="Get all sequences in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get all sequences in the diagram" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="429.8516"/><ellipse cx="441.5" cy="434.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get all sequences in the diagram" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get all sequences in the diagram" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="435" x="450.5" y="438.062">sequences() : std::map&lt;common::model::diagram_element::id_t,activity&gt; &amp;</text></a><a href="" target="_top" title="Convenience `should_include` overload for participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Convenience `should_include` overload for participant" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="442.6563"/><ellipse cx="441.5" cy="447.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Convenience `should_include` overload for participant" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Convenience `should_include` overload for participant" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="450.5" y="450.8667">should_include() const : bool</text></a><a href="" target="_top" title="Convert element full name to PlantUML alias." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Convert element full name to PlantUML alias." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="455.4609"/><ellipse cx="441.5" cy="460.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Convert element full name to PlantUML alias." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Convert element full name to PlantUML alias." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="450.5" y="463.6714">to_alias() const : std::string</text></a><a href="" target="_top" title="Get the diagram model type - in this case sequence." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the diagram model type - in this case sequence." xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="468.2656"/><ellipse cx="441.5" cy="473.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/></a><a href="" target="_top" title="Get the diagram model type - in this case sequence." xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="Get the diagram model type - in this case sequence." xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="450.5" y="476.4761">type() const : common::model::diagram_t</text></a><line style="stroke: #A80036; stroke-width: 1.5;" x1="431.5" x2="1090.5" y1="483.0703" y2="483.0703"/><a href="" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="489.0703"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="491.0703"/></a><a href="" target="_top" title="active_participants_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="active_participants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="413" x="450.5" y="497.2808">active_participants_ : std::set&lt;common::model::diagram_element::id_t&gt;</text></a><a href="" target="_top" title="participants_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="participants_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="501.875"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="503.875"/></a><a href="" target="_top" title="participants_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="participants_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="549" x="450.5" y="510.0854">participants_ : std::map&lt;common::model::diagram_element::id_t,std::unique_ptr&lt;participant&gt;&gt;</text></a><a href="" target="_top" title="sequences_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="sequences_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="514.6797"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="516.6797"/></a><a href="" target="_top" title="sequences_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="sequences_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="419" x="450.5" y="522.8901">sequences_ : std::map&lt;common::model::diagram_element::id_t,activity&gt;</text></a><a href="" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="started_" xlink:type="simple"><rect fill="#FEFECE" height="10" style="stroke: none; stroke-width: 1.0;" width="20" x="436.5" y="527.4844"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="438.5" y="529.4844"/></a><a href="" target="_top" title="started_" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:title="started_" xlink:type="simple"><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="450.5" y="535.6948">started_ : bool</text></a><!--MD5=[b33f1614e5f0bf4794b27e69905bc927]
reverse link C_0001400215772842495226 to C_0000885514871619471610--><path d="M425.5,736.8431 C394.05,761.3131 357.61,791.3131 327,820.9531 C321.2,826.5731 315.38,832.4031 309.58,838.3631 " fill="none" id="C_0001400215772842495226&lt;-C_0000885514871619471610" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="421.31,731.2331,441.43,724.5831,429.85,742.3231,421.31,731.2331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[cff630a429a41d6509e30ee5071e7c05]
reverse link C_0001400215772842495226 to C_0000232638456031681828--><path d="M501.67,744.6831 C502.64,767.1431 503.78,793.6531 504.94,820.7331 " fill="none" id="C_0001400215772842495226&lt;-C_0000232638456031681828" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="494.67,744.7931,500.81,724.5131,508.66,744.1931,494.67,744.7931" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[aaa21626746a78046d7a511702c30bb7]
reverse link C_0000232638456031681828 to C_0000817665972547784504--><path d="M471.57,1170.5931 C462.39,1212.3231 452.67,1256.4731 443.6,1297.6431 " fill="none" id="C_0000232638456031681828&lt;-C_0000817665972547784504" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="464.75,1169.0031,475.89,1150.9731,478.43,1172.0131,464.75,1169.0031" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed3960d209e9f24c5c41aa336e94c692]
reverse link C_0000232638456031681828 to C_0002280191967493310558--><path d="M578.14,1169.9731 C610.64,1259.9031 647.26,1361.2631 668.39,1419.7131 " fill="none" id="C_0000232638456031681828&lt;-C_0002280191967493310558" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="571.49,1172.1631,571.27,1150.9731,584.65,1167.4031,571.49,1172.1631" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f9f93e1df1c0d799338094cb92c7f29d]
reverse link C_0002228653068706235818 to C_0001623832985137466228--><path d="M1103.3,1115.6231 C1164.7,1148.6931 1234.03,1179.9831 1302,1197.9531 C1316.08,1201.6731 1552.59,1196.9031 1564,1205.9531 C1594.68,1230.2731 1612.82,1266.4131 1623.33,1304.1631 " fill="none" id="C_0002228653068706235818&lt;-C_0001623832985137466228" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1091.53,1109.2131,1094.8842,1115.5966,1102.0668,1114.9557,1098.7126,1108.5721,1091.53,1109.2131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1305" y="1187.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="35" x="1315" y="1194.02">type_</text><!--MD5=[494ff3f01f33dcda65528de8e47d9150]
reverse link C_0002228653068706235818 to C_0000202859212831973510--><path d="M1103.66,1072.7931 C1182.11,1106.4231 1272.81,1145.4031 1355,1180.9531 C1372.35,1188.4631 1375.54,1193.8531 1394,1197.9531 C1410.82,1201.6831 1690.11,1195.7631 1704,1205.9531 C1776.24,1258.9731 1791.02,1373.5231 1793.7,1432.2031 " fill="none" id="C_0002228653068706235818&lt;-C_0000202859212831973510" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1091.68,1067.6531,1095.6235,1073.6904,1102.7131,1072.3722,1098.7696,1066.3349,1091.68,1067.6531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1397" y="1187.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="1407" y="1194.02">scope_</text><!--MD5=[a67a2b87f33292a603fe6541cbf2f274]
reverse link C_0001073500714379115414 to C_0002228653068706235818--><path d="M1203.7,1296.3331 C1155.62,1246.8631 1103.43,1193.1631 1056.24,1144.6131 " fill="none" id="C_0001073500714379115414&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1208.89,1291.6331,1217.81,1310.8531,1198.86,1301.3831,1208.89,1291.6331" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[44f503eb492a62418b7123e16c9b38de]
reverse link C_0000460030520790196523 to C_0002228653068706235818--><path d="M903,757.3031 C903,778.6731 903,802.7931 903,827.1531 " fill="none" id="C_0000460030520790196523&lt;-C_0002228653068706235818" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="903,744.0331,899,750.0331,903,756.0331,907,750.0331,903,744.0331" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="906" y="780.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="916" y="787.02">messages_</text><!--MD5=[1ec789dad01cc0cf7ca5a35a23b3b940]
reverse link C_0000924044572035510976 to C_0000460030520790196523--><path d="M851.48,554.5531 C860.98,577.7731 869.98,599.7531 877.71,618.6631 " fill="none" id="C_0000924044572035510976&lt;-C_0000460030520790196523" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="846.47,542.3131,845.0363,549.3803,851.0085,553.4218,852.4421,546.3546,846.47,542.3131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="867" y="578.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="76" x="877" y="585.02">sequences_</text><!--MD5=[63e8c813a091a0c9d7ec61cd2b876cc0]
reverse link C_0000924044572035510976 to C_0001400215772842495226--><path d="M595.29,552.9231 C570.78,585.3831 548.03,615.5231 530.79,638.3431 " fill="none" id="C_0000924044572035510976&lt;-C_0001400215772842495226" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="603.3,542.3131,596.4906,544.6862,596.0621,551.8846,602.8715,549.5115,603.3,542.3131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="579" y="578.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="82" x="589" y="585.02">participants_</text><!--MD5=[200170a1e068a1e5ab0bc25f74c55d33]
reverse link C_0000197068985320835874 to C_0000924044572035510976--><path d="M1967.63,1278.5831 C1939.82,1253.8131 1911.42,1229.0331 1884,1205.9531 C1604.13,970.3131 1271.98,715.1231 1041.85,541.9731 " fill="none" id="C_0000197068985320835874&lt;-C_0000924044572035510976" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1972.31,1273.3831,1982.55,1291.9331,1962.98,1283.8131,1972.31,1273.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b3c2740fe1b6add779f3cec63ef6243c]
@startuml
title clang-uml sequence diagram model
package [common] as C_0000316605034920222648 {
package [model] as C_0000083721806430512831 {
enum "message_t" as C_0001623832985137466228
enum C_0001623832985137466228 [[enumclanguml_1_1common_1_1model_1_1message__t.html{message_t}]] {
kCall
kReturn
kIf
kElse
kElseIf
kIfEnd
kWhile
kWhileEnd
kDo
kDoEnd
kFor
kForEnd
kTry
kCatch
kTryEnd
kSwitch
kCase
kSwitchEnd
kConditional
kConditionalElse
kConditionalEnd
kNone
}
enum "message_scope_t" as C_0000202859212831973510
enum C_0000202859212831973510 [[enumclanguml_1_1common_1_1model_1_1message__scope__t.html{message_scope_t}]] {
kNormal
kCondition
}
class "diagram_element" as C_0001073500714379115414
class C_0001073500714379115414 [[classclanguml_1_1common_1_1model_1_1diagram__element.html{Base class for standalone diagram elements.}]] {
+add_relationship() : void [[[{add_relationship}]]]
+alias() const : std::string [[[{Return elements' diagram alias.}]]]
+append() : void [[[{append}]]]
+complete() const : bool [[[{complete}]]]
+complete() : void [[[{complete}]]]
+context() const : inja::json [[[{context}]]]
+full_name() const : std::string [[[{Return the elements fully qualified name.}]]]
+id() const : common::model::diagram_element::id_t [[[{Returns diagram element id.}]]]
+is_nested() const : bool [[[{is_nested}]]]
+name() const : std::string [[[{name}]]]
+nested() : void [[[{nested}]]]
+relationships() : std::vector<relationship> & [[[{relationships}]]]
+relationships() const : const std::vector<relationship> & [[[{relationships}]]]
+set_id() : void [[[{set_id}]]]
+set_name() : void [[[{set_name}]]]
+type_name() const : std::string [[[{type_name}]]]
__
-complete_ : bool [[[{complete_}]]]
-id_ : common::model::diagram_element::id_t [[[{id_}]]]
-name_ : std::string [[[{name_}]]]
-nested_ : bool [[[{nested_}]]]
-relationships_ : std::vector<relationship> [[[{relationships_}]]]
}
abstract "diagram" as C_0000197068985320835874
abstract C_0000197068985320835874 [[classclanguml_1_1common_1_1model_1_1diagram.html{Base class for all diagram models}]] {
+complete() const : bool [[[{Whether the diagram is complete.}]]]
{abstract} +context() const = 0 : inja::json [[[{context}]]]
+filter() const : const common::model::diagram_filter & [[[{filter}]]]
+finalize() : void [[[{Once the diagram is complete, run any final processing.}]]]
{abstract} +get() const = 0 : common::optional_ref<common::model::diagram_element> [[[{get}]]]
{abstract} +get() const = 0 : common::optional_ref<common::model::diagram_element> [[[{get}]]]
+get_with_namespace() const : common::optional_ref<common::model::diagram_element> [[[{get_with_namespace}]]]
+has_element() const : bool [[[{has_element}]]]
+name() const : std::string [[[{name}]]]
+set_complete() : void [[[{Set diagram in a complete state.}]]]
+set_filter() : void [[[{set_filter}]]]
+set_name() : void [[[{set_name}]]]
+should_include() const : bool [[[{should_include}]]]
+should_include() const : bool [[[{should_include}]]]
+should_include() const : bool [[[{should_include}]]]
+should_include() const : bool [[[{should_include}]]]
+should_include() const : bool [[[{should_include}]]]
+should_include() const : bool [[[{should_include}]]]
+should_include() const = deleted : bool [[[{should_include}]]]
+should_include() const : bool [[[{should_include}]]]
{abstract} +type() const = 0 : common::model::diagram_t [[[{Return type of the diagram.}]]]
__
-complete_ : bool [[[{complete_}]]]
-filter_ : std::unique_ptr<diagram_filter> [[[{filter_}]]]
-name_ : std::string [[[{name_}]]]
}
}
}
package [sequence_diagram] as C_0001521862840957629236 {
package [model] as C_0002206969880830639264 {
class "participant" as C_0001400215772842495226
class C_0001400215772842495226 [[structclanguml_1_1sequence__diagram_1_1model_1_1participant.html{Base class for various types of sequence diagram participants}]] {
+to_string() const : std::string [[[{Create a string representation of the participant}]]]
+type_name() const : std::string [[[{type_name}]]]
__
+stereotype_ : sequence_diagram::model::participant::stereotype_t [[[{stereotype_}]]]
}
class "class_" as C_0000885514871619471610
class C_0000885514871619471610 [[structclanguml_1_1sequence__diagram_1_1model_1_1class__.html{Sequence diagram participant representing a class.}]] {
+full_name() const : std::string [[[{full_name}]]]
+full_name_no_ns() const : std::string [[[{full_name_no_ns}]]]
+is_abstract() const : bool [[[{Check if class is a abstract.}]]]
+is_alias() const : bool [[[{Check if class is a typedef/using alias.}]]]
+is_alias() : void [[[{Set whether the class is an alias}]]]
+is_lambda() const : bool [[[{Check if the class is lambda}]]]
+is_lambda() : void [[[{Set whether the class is a lambda.}]]]
+is_struct() const : bool [[[{Check if class is a struct.}]]]
+is_struct() : void [[[{Set whether the class is a struct.}]]]
+is_template() const : bool [[[{Check if class is a template.}]]]
+is_template() : void [[[{Set whether the class is a template instantiation.}]]]
+is_template_instantiation() const : bool [[[{Check if class is a template instantiation.}]]]
+is_template_instantiation() : void [[[{Set whether the class is a template instantiation.}]]]
+type_name() const : std::string [[[{type_name}]]]
__
-full_name_ : std::string [[[{full_name_}]]]
-is_alias_ : bool [[[{is_alias_}]]]
-is_lambda_ : bool [[[{is_lambda_}]]]
-is_struct_ : bool [[[{is_struct_}]]]
-is_template_ : bool [[[{is_template_}]]]
-is_template_instantiation_ : bool [[[{is_template_instantiation_}]]]
}
class "function" as C_0000232638456031681828
class C_0000232638456031681828 [[structclanguml_1_1sequence__diagram_1_1model_1_1function.html{Participant mode representing a free function.}]] {
+add_parameter() : void [[[{Add a function parameter}]]]
+full_name() const : std::string [[[{full_name}]]]
+full_name_no_ns() const : std::string [[[{full_name_no_ns}]]]
+is_const() const : bool [[[{Check if function is const}]]]
+is_const() : void [[[{Set whether the function is const}]]]
+is_operator() const : bool [[[{Check, if the method is an operator}]]]
+is_operator() : void [[[{Set whether the method is an operator}]]]
+is_static() const : bool [[[{Check, if the function is static}]]]
+is_static() : void [[[{Set whether the function is static}]]]
+is_void() const : bool [[[{Check, if the function has no return value}]]]
+is_void() : void [[[{Set whether the function has a return value}]]]
+message_name() const : std::string [[[{Render function name as message label}]]]
+parameters() const : const std::vector<std::string> & [[[{Get the list of function parameters}]]]
+return_type() : void [[[{Set functions return type}]]]
+return_type() const : const std::string & [[[{Get function return type}]]]
+type_name() const : std::string [[[{type_name}]]]
__
-is_const_ : bool [[[{is_const_}]]]
-is_operator_ : bool [[[{is_operator_}]]]
-is_static_ : bool [[[{is_static_}]]]
-is_void_ : bool [[[{is_void_}]]]
-parameters_ : std::vector<std::string> [[[{parameters_}]]]
-return_type_ : std::string [[[{return_type_}]]]
}
class "method" as C_0000817665972547784504
class C_0000817665972547784504 [[structclanguml_1_1sequence__diagram_1_1model_1_1method.html{Participant model representing a method}]] {
+alias() const : std::string [[[{Get the participant PlantUML alias}]]]
+class_full_name() const : const auto & [[[{Get the class full name.}]]]
+class_id() const : diagram_element::id_t [[[{Get the class id}]]]
+full_name() const : std::string [[[{full_name}]]]
+is_assignment() : void [[[{Set whether the method is an assignment operator}]]]
+is_assignment() const : bool [[[{Check, if the method is an assignment operator}]]]
+is_constructor() : void [[[{Set whether the method is a constructor}]]]
+is_constructor() const : bool [[[{Check, if the method is a constructor}]]]
+is_defaulted() : void [[[{Set whether the method is defaulted}]]]
+is_defaulted() const : bool [[[{Check, if the method is defaulted}]]]
+message_name() const : std::string [[[{message_name}]]]
+method_name() const : std::string [[[{Get method name}]]]
+set_class_full_name() : void [[[{Set full qualified name of the class}]]]
+set_class_id() : void [[[{Set the id of the participant to which this method belongs to.}]]]
+set_method_name() : void [[[{Set method name}]]]
+to_string() const : std::string [[[{Create a string representation of the participant}]]]
+type_name() const : std::string [[[{type_name}]]]
__
-class_full_name_ : std::string [[[{class_full_name_}]]]
-class_id_ : diagram_element::id_t [[[{class_id_}]]]
-is_assignment_ : bool [[[{is_assignment_}]]]
-is_constructor_ : bool [[[{is_constructor_}]]]
-is_defaulted_ : bool [[[{is_defaulted_}]]]
-method_name_ : std::string [[[{method_name_}]]]
}
class "function_template" as C_0002280191967493310558
class C_0002280191967493310558 [[structclanguml_1_1sequence__diagram_1_1model_1_1function__template.html{Participant model representing a function template.}]] {
+full_name() const : std::string [[[{full_name}]]]
+full_name_no_ns() const : std::string [[[{full_name_no_ns}]]]
+message_name() const : std::string [[[{Render function name as message label}]]]
+type_name() const : std::string [[[{type_name}]]]
__
}
class "message" as C_0002228653068706235818
class C_0002228653068706235818 [[classclanguml_1_1sequence__diagram_1_1model_1_1message.html{Model of a sequence diagram message.}]] {
+condition_text() : void [[[{Set condition text for block statements (e.g. if( <THIS  TEXT>))}]]]
+condition_text() const : std::optional<std::string> [[[{Get condition text}]]]
+from() const : common::model::diagram_element::id_t [[[{Get the id of source of message}]]]
+message_name() const : const std::string & [[[{Get the message label}]]]
+message_scope() const : common::model::message_scope_t [[[{Get message scope}]]]
+return_type() const : const std::string & [[[{Get the return message type label}]]]
+set_from() : void [[[{Set the id of message source participant}]]]
+set_message_name() : void [[[{Set the message label}]]]
+set_message_scope() : void [[[{Set message scope}]]]
+set_return_type() : void [[[{Set the return message type label}]]]
+set_to() : void [[[{Set the id of the message target}]]]
+set_type() : void [[[{Set message type}]]]
+to() const : common::model::diagram_element::id_t [[[{Get the id of the message target}]]]
+type() const : common::model::message_t [[[{Get message type}]]]
__
-condition_text_ : std::optional<std::string> [[[{condition_text_}]]]
-from_ : common::model::diagram_element::id_t [[[{from_}]]]
-message_name_ : std::string [[[{message_name_}]]]
-return_type_ : std::string [[[{return_type_}]]]
-scope_ : common::model::message_scope_t [[[{scope_}]]]
-to_ : common::model::diagram_element::id_t [[[{to_}]]]
-type_ : common::model::message_t [[[{type_}]]]
}
class "activity" as C_0000460030520790196523
class C_0000460030520790196523 [[classclanguml_1_1sequence__diagram_1_1model_1_1activity.html{Model of a sequence diagram activity}]] {
+add_message() : void [[[{Add a message call to the activity}]]]
+from() const : common::model::diagram_element::id_t [[[{Get the id of activity parent participant}]]]
+messages() : std::vector<message> & [[[{Get list of messages in the activity}]]]
+messages() const : const std::vector<message> & [[[{Get list of messages in the activity}]]]
__
-from_ : common::model::diagram_element::id_t [[[{from_}]]]
-messages_ : std::vector<message> [[[{messages_}]]]
}
class "diagram" as C_0000924044572035510976
class C_0000924044572035510976 [[classclanguml_1_1sequence__diagram_1_1model_1_1diagram.html{Model of a sequence diagram}]] {
+active_participants() : std::set<common::model::diagram_element::id_t> & [[[{Get all active participants in the diagram}]]]
+add_active_participant() : void [[[{Set participant with `id` as active}]]]
+add_block_message() : void [[[{Add block message to the current activity}]]]
+add_case_stmt_message() : void [[[{Add `switch` block `case` statement}]]]
+add_message() : void [[[{Add message to current activity}]]]
+add_participant() : void [[[{Add sequence diagram participant}]]]
+context() const : inja::json [[[{Return the elements JSON context for inja templates.}]]]
+end_block_message() : void [[[{End current block message}]]]
+finalize() : void [[[{Once the diagram is complete, run any final processing.}]]]
-fold_or_end_block_statement() const : void [[[{fold_or_end_block_statement}]]]
+get() const : common::optional_ref<common::model::diagram_element> [[[{Search for element in the diagram by fully qualified name.}]]]
+get() const : common::optional_ref<common::model::diagram_element> [[[{Search for element in the diagram by id.}]]]
+get_activity() : sequence_diagram::model::activity & [[[{Get reference to current activity of a participant}]]]
+get_participant<T>() const : common::optional_ref<T>
-is_begin_block_message() : bool [[[{is_begin_block_message}]]]
-is_end_block_message() : bool [[[{is_end_block_message}]]]
+list_start_from_values() const : std::vector<std::string> [[[{Get list of all possible 'start_from' values in the model}]]]
+participants() const : const std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> & [[[{Get map of all participants in the diagram}]]]
+participants() : std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> & [[[{Get map of all participants in the diagram}]]]
+print() const : void [[[{Debug method for printing entire diagram to console.}]]]
+sequences() const : const std::map<common::model::diagram_element::id_t,activity> & [[[{Get all sequences in the diagram}]]]
+sequences() : std::map<common::model::diagram_element::id_t,activity> & [[[{Get all sequences in the diagram}]]]
+should_include() const : bool [[[{Convenience `should_include` overload for participant}]]]
+to_alias() const : std::string [[[{Convert element full name to PlantUML alias.}]]]
+type() const : common::model::diagram_t [[[{Get the diagram model type - in this case sequence.}]]]
__
-active_participants_ : std::set<common::model::diagram_element::id_t> [[[{active_participants_}]]]
-participants_ : std::map<common::model::diagram_element::id_t,std::unique_ptr<participant>> [[[{participants_}]]]
-sequences_ : std::map<common::model::diagram_element::id_t,activity> [[[{sequences_}]]]
-started_ : bool [[[{started_}]]]
}
}
}
C_0001400215772842495226 <|- - C_0000885514871619471610
C_0001400215772842495226 <|- - C_0000232638456031681828
C_0000232638456031681828 <|- - C_0000817665972547784504
C_0000232638456031681828 <|- - C_0002280191967493310558
C_0002228653068706235818 o- - C_0001623832985137466228 : -type_
C_0002228653068706235818 o- - C_0000202859212831973510 : -scope_
C_0001073500714379115414 <|- - C_0002228653068706235818
C_0000460030520790196523 o- - C_0002228653068706235818 : -messages_
C_0000924044572035510976 o- - C_0000460030520790196523 : -sequences_
C_0000924044572035510976 o- - C_0001400215772842495226 : -participants_
C_0000197068985320835874 <|- - C_0000924044572035510976

@enduml

PlantUML version 1.2020.02(Sun Mar 01 11:22:07 CET 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.19+7-post-Ubuntu-0ubuntu122.04.1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>